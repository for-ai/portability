{
    "created": 1682911964.7563996,
    "duration": 55.97741627693176,
    "exitcode": 1,
    "root": "/home/frasermince/portability",
    "environment": {
        "Python": "3.10.9",
        "Platform": "Linux-4.19.0-23-cloud-amd64-x86_64-with-glibc2.28",
        "Packages": {
            "pytest": "7.3.1",
            "pluggy": "1.0.0"
        },
        "Plugins": {
            "xdist": "3.2.1",
            "hypothesis": "6.75.1",
            "json-report": "1.5.0",
            "forked": "1.6.0",
            "metadata": "2.0.4",
            "timeout": "2.1.0"
        }
    },
    "summary": {
        "passed": 503,
        "skipped": 48,
        "failed": 12,
        "total": 563,
        "collected": 563
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/__init__.py",
                    "type": "Package"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCPU::test_adamax_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 228
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCUDA::test_adamax_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 228
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Adamax_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_depthwise_naive_groups_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 197
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_depthwise_naive_groups_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 197
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_depthwise_naive_groups_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 197
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_groups_nobias_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 130
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_groups_wbias_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 159
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_module_same_padding_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 59
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv3d_64bit_indexing_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 322
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_cudnn_ndhwc_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 271
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_cudnn_ndhwc_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 271
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_empty_channel_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 243
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_empty_channel_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 243
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_modules_raise_error_on_incorrect_input_size_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 90
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_shapecheck_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_invalid_conv3d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 45
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_depthwise_naive_groups_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 197
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_depthwise_naive_groups_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 197
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_depthwise_naive_groups_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 197
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_groups_nobias_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 130
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_groups_wbias_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 159
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_module_same_padding_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 59
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv3d_64bit_indexing_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 322
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_cudnn_ndhwc_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 271
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_cudnn_ndhwc_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 271
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_empty_channel_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 243
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_empty_channel_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 243
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_modules_raise_error_on_incorrect_input_size_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 90
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_shapecheck_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_invalid_conv3d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 45
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_pin_memory_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 58
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_pin_memory_device_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 64
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_pin_memory_with_only_device_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_sequential_batch_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 32
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_pin_memory_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 58
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_pin_memory_device_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 64
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_pin_memory_with_only_device_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_sequential_batch_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 32
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCPU::test_sgd_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 48
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCUDA::test_sgd_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 48
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCPU::test_transformerencoderlayer_gelu_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 18
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCUDA::test_transformerencoderlayer_gelu_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 18
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCUDA::test_transformerencoderlayer_gelu_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 18
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCPU::test_lbfgs_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 204
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCUDA::test_lbfgs_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 204
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCPU::test_rprop_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 313
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCUDA::test_rprop_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 313
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/RProp_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_append_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 149
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_delitem_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 131
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_getitem_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 66
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_setitem_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 96
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_setitem_named_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 112
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_append_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 149
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_delitem_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 131
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_getitem_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 66
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_setitem_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 96
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_setitem_named_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 112
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCPU::test_slicing_of_subset_of_dataset_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 42
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCPU::test_slicing_of_subset_of_subset_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 56
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCUDA::test_slicing_of_subset_of_dataset_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 42
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCUDA::test_slicing_of_subset_of_subset_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 56
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCPU::test_transformerencoder_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 73
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCUDA::test_transformerencoder_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 73
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCPU::test_Transformer_cell_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 86
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCUDA::test_Transformer_cell_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 86
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_avg_pool3d_output_size_one_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 35
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_pool_invalid_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 52
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_pooling_zero_batch_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 19
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_pooling_zero_batch_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 19
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_avg_pool3d_output_size_one_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 35
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_pool_invalid_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 52
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_pooling_zero_batch_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 19
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_pooling_zero_batch_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 19
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_add_module_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 208
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_add_module_raises_error_if_attr_exists_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 187
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_named_children_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_named_modules_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 114
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_register_buffer_raises_error_if_attr_exists_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 147
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_register_parameter_raises_error_if_attr_exists_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 167
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_add_module_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 208
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_add_module_raises_error_if_attr_exists_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 187
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_named_children_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_named_modules_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 114
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_register_buffer_raises_error_if_attr_exists_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 147
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_register_parameter_raises_error_if_attr_exists_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 167
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_bool_cpu_bool",
                    "type": "TestCaseFunction",
                    "lineno": 112
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_bfloat16",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int16",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int32",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int8",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_uint8",
                    "type": "TestCaseFunction",
                    "lineno": 119
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_bool_cuda_bool",
                    "type": "TestCaseFunction",
                    "lineno": 112
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_bfloat16",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 139
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int16",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int32",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int8",
                    "type": "TestCaseFunction",
                    "lineno": 119
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_uint8",
                    "type": "TestCaseFunction",
                    "lineno": 119
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCPU::test_apply_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 76
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCUDA::test_apply_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 76
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/apply_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCPU::test_sort_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 59
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCUDA::test_sort_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 59
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/argsort_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_buffer_update_when_stats_are_not_tracked_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 322
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_cudnn_half_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 204
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_cudnn_nhwc_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 157
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_nhwc_cpu_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 92
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_nhwc_cuda_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 341
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_non_contig_cpu_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 136
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_nonaffine_cuda_half_input_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 228
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_bias_is_not_same_size_as_input_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 283
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_less_than_one_value_per_channel_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 241
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_running_mean_is_not_same_size_as_input_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 248
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_running_var_is_not_same_size_as_input_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 259
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_running_var_or_running_mean_have_forward_grad_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_weight_is_not_same_size_as_input_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 270
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_buffer_update_when_stats_are_not_tracked_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 322
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_cudnn_half_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 204
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_cudnn_nhwc_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 157
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_nhwc_cpu_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 92
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_nhwc_cuda_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 341
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_non_contig_cpu_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 136
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_nonaffine_cuda_half_input_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 228
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_bias_is_not_same_size_as_input_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 283
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_less_than_one_value_per_channel_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 241
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_running_mean_is_not_same_size_as_input_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 248
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_running_var_is_not_same_size_as_input_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 259
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_running_var_or_running_mean_have_forward_grad_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_weight_is_not_same_size_as_input_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 270
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_broadcasts_pos_weights_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 127
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_broadcasts_weights_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 94
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_gives_same_result_as_sigmoid_and_bce_loss_large_tensors_with_grad_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 51
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_has_correct_grad_at_zero_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 86
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_ones_in_pos_weights_are_the_same_as_none_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 118
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_stability_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 158
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_with_pos_weight_has_correct_grad_at_zero_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 146
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_broadcasts_pos_weights_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 127
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_broadcasts_weights_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 94
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_gives_same_result_as_sigmoid_and_bce_loss_large_tensors_with_grad_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 51
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_has_correct_grad_at_zero_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 86
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_ones_in_pos_weights_are_the_same_as_none_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 118
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_stability_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 158
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_with_pos_weight_has_correct_grad_at_zero_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 146
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCPU::test_bitwise_not_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 22
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCUDA::test_bitwise_not_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 22
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCPU::test_broadcast_shapes_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 41
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCPU::test_broadcast_tensors_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 27
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCUDA::test_broadcast_shapes_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 41
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCUDA::test_broadcast_tensors_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 27
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat2_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 289
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat2_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 289
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat2_cpu_int32",
                    "type": "TestCaseFunction",
                    "lineno": 289
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_all_dtypes_and_devices_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 28
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_big_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 275
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 250
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_empty_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 60
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_empty_legacy_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 44
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_in_channels_last_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 123
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_mem_overlap_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 21
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_out_channels_last_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 113
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_out_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 74
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_out_memory_format_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 174
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_preserve_channels_last_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 151
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_stack_cross_devices_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 235
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat2_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 289
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat2_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 289
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat2_cuda_int32",
                    "type": "TestCaseFunction",
                    "lineno": 289
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_all_dtypes_and_devices_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 28
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_big_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 275
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 250
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_empty_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 60
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_empty_legacy_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 44
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_in_channels_last_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 123
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_mem_overlap_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 21
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_out_channels_last_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 113
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_out_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 74
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_out_memory_format_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 174
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_preserve_channels_last_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 151
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_stack_cross_devices_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 235
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_add_dataset_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 158
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_raises_index_error_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 150
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_two_non_singletons_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 132
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_two_non_singletons_with_empty_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 140
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_two_singletons_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 125
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_iterable_dataset_err_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 168
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_add_dataset_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 158
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_raises_index_error_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 150
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_two_non_singletons_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 132
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_two_non_singletons_with_empty_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 140
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_two_singletons_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 125
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_iterable_dataset_err_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 168
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_backward_depthwise_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 499
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_backward_depthwise_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 499
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_depthwise_naive_groups_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 391
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_depthwise_naive_groups_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 391
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_depthwise_naive_groups_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 391
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_deterministic_cudnn_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_deterministic_cudnn_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_deterministic_cudnn_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_large_workspace_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_large_workspace_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_large_workspace_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_naive_groups_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 460
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_size_1_kernel_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 439
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_backward_depthwise_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 499
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_backward_depthwise_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 499
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_depthwise_naive_groups_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 391
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_depthwise_naive_groups_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 391
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_depthwise_naive_groups_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 391
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_deterministic_cudnn_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_deterministic_cudnn_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_deterministic_cudnn_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 296
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_large_workspace_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_large_workspace_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_large_workspace_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_naive_groups_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 460
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_naive_groups_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 460
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_naive_groups_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 460
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_size_1_kernel_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 439
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_1x1_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 110
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_OneDNN_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 121
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_backward_twice_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 176
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_groups_nobias_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 189
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_groups_nobias_v2_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 232
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_inconsistent_types_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_inconsistent_types_on_GPU_with_cudnn_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 157
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_inconsistent_types_on_GPU_without_cudnn_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 94
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_missing_argument_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 172
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_module_same_padding_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 46
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_1x1_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 110
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_OneDNN_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 121
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_backward_twice_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 176
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_groups_nobias_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 189
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_groups_nobias_v2_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 232
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_inconsistent_types_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_inconsistent_types_on_GPU_with_cudnn_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 157
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_inconsistent_types_on_GPU_without_cudnn_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 94
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_missing_argument_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 172
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_module_same_padding_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 46
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCPU::test_device_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 65
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCUDA::test_device_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 65
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cuda_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCPU::test_to_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 66
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCUDA::test_to_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 66
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCPU::test_diag_cpu_bool",
                    "type": "TestCaseFunction",
                    "lineno": 23
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCPU::test_diag_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 23
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCUDA::test_diag_cuda_bool",
                    "type": "TestCaseFunction",
                    "lineno": 23
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCUDA::test_diag_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 23
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCPU::test_Dropout3d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 124
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCUDA::test_Dropout3d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 124
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCPU::test_invalid_dropout_p_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 19
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCUDA::test_invalid_dropout_p_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 19
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCPU::test_empty_dropout_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 166
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCUDA::test_empty_dropout_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 166
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCPU::test_invalid_dropout_p_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCPU::test_native_dropout_corner_case_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 34
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCUDA::test_invalid_dropout_p_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCUDA::test_native_dropout_corner_case_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 34
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 68
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 68
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 68
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_invalid_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_invalid_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_invalid_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_flipud_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 80
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_flipud_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 80
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_flipud_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 80
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 68
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 68
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 68
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_invalid_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_invalid_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_invalid_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 72
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_flipud_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 80
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_flipud_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 80
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_flipud_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 80
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCPU::test_group_norm_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 138
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCUDA::test_group_norm_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 138
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/group_norm_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCPU::test_is_same_size_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 69
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCUDA::test_is_same_size_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 69
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jacobian_match_vjp_jvp_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 328
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jacobian_match_vjp_jvp_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 328
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_create_graph_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 283
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_create_graph_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 283
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 127
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 127
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_strict_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 156
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_strict_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 156
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_no_grad_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 193
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_no_grad_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 193
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_output_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 216
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_output_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 216
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_scalar_base_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 256
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_scalar_logging_tensor_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 256
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jacobian_match_vjp_jvp_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 328
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jacobian_match_vjp_jvp_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 328
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_create_graph_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 283
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_create_graph_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 283
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 127
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 127
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_strict_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 156
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_strict_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 156
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_no_grad_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 193
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_no_grad_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 193
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_output_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 216
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_output_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 216
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_scalar_base_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 256
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_scalar_logging_tensor_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 256
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCPU::test_KLDivLoss_batch_mean_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 90
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCPU::test_KLDivLoss_batch_mean_log_target_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 105
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCUDA::test_KLDivLoss_batch_mean_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 90
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCUDA::test_KLDivLoss_batch_mean_log_target_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 105
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCPU::test_to_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 67
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCUDA::test_to_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 67
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseBase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int16",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int32",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int8",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_uint8",
                    "type": "TestCaseFunction",
                    "lineno": 84
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int16",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int32",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int8",
                    "type": "TestCaseFunction",
                    "lineno": 84
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_uint8",
                    "type": "TestCaseFunction",
                    "lineno": 84
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseBase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCPU::test_det_logdet_slogdet_batched_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCPU::test_det_logdet_slogdet_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 68
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCUDA::test_det_logdet_slogdet_batched_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCUDA::test_det_logdet_slogdet_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 68
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCPU::test_lstmcell_backward_only_one_output_grad_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 161
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCUDA::test_lstmcell_backward_only_one_output_grad_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 161
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_LSTM_cell_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 120
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_LSTM_cell_forward_hidden_size_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 146
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_LSTM_cell_forward_input_size_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 136
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_RNN_cell_no_broadcasting_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 91
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_LSTM_cell_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 120
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_LSTM_cell_forward_hidden_size_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 146
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_LSTM_cell_forward_input_size_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 136
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_RNN_cell_no_broadcasting_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 91
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCPU::test_lt_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 46
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCPU::test_lt_scalar_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 61
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCUDA::test_lt_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 46
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCUDA::test_lt_scalar_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 61
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_rtol_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 138
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 219
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 219
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 219
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 219
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 107
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_rtol_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 138
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 247
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 47
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 168
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 219
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 219
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 219
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 219
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_invalid_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 59
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_invalid_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 59
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_invalid_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 59
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 88
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_invalid_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 59
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_invalid_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 59
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_invalid_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 59
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::DistributionsTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCPU::test_multinomial_log_prob_with_logits_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 191
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCUDA::test_multinomial_log_prob_with_logits_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 191
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU::test_multinomial_1d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 104
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU::test_multinomial_1d_log_prob_and_entropy_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 122
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU::test_multinomial_2d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 144
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA::test_multinomial_1d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 104
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA::test_multinomial_1d_log_prob_and_entropy_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 122
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA::test_multinomial_2d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 144
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCPU::test_multinomial_shape_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 171
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCUDA::test_multinomial_shape_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 171
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::DistributionsTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 116
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 116
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 116
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 116
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 116
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 116
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 116
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 116
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCPU::test_randperm_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCPU::test_randperm_device_compatibility_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 151
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCUDA::test_randperm_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCUDA::test_randperm_device_compatibility_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 151
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCPU::test_range_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 35
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCPU::test_range_warning_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 71
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCUDA::test_range_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 35
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCUDA::test_range_warning_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 71
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_add_module_raises_error_if_attr_exists_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 153
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_buffer_raises_error_if_attr_exists_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 89
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_parameter_allows_overwriting_with_same_name_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 136
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_parameter_raises_error_if_attr_exists_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 118
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_parameter_raises_error_if_name_is_not_string_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 108
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_add_module_raises_error_if_attr_exists_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 153
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_buffer_raises_error_if_attr_exists_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 89
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_parameter_allows_overwriting_with_same_name_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 136
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_parameter_raises_error_if_attr_exists_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 118
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_parameter_raises_error_if_name_is_not_string_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 108
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::DistributionsTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestConstraints",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestConstraints::test_params_constraints",
                    "type": "TestCaseFunction",
                    "lineno": 364
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_argmax_relaxed_categorical_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 241
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_mode_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 323
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_relaxed_one_hot_categorical_1d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 195
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_relaxed_one_hot_categorical_2d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 216
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_argmax_relaxed_categorical_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 241
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_mode_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 323
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_relaxed_one_hot_categorical_1d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 195
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_relaxed_one_hot_categorical_2d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 216
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::DistributionsTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestConstraints",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCPU::test_batchnorm_simple_average_cpu_bfloat16",
                    "type": "TestCaseFunction",
                    "lineno": 120
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCPU::test_batchnorm_simple_average_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 120
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCUDA::test_batchnorm_simple_average_cuda_bfloat16",
                    "type": "TestCaseFunction",
                    "lineno": 120
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCUDA::test_batchnorm_simple_average_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 120
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/round_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCPU::test_rounding_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 65
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCUDA::test_rounding_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 65
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/round_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/round_test.py::TestCase",
                    "type": "Class"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseBase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCPU::test_saddmm_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 108
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCPU::test_saddmm_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 108
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCUDA::test_saddmm_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 108
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCUDA::test_saddmm_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 108
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseBase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_int32",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 43
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 43
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 43
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU::test_nn_scalars_reductions_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU::test_smooth_l1_loss_bfloat16_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 188
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU::test_smooth_l1_loss_vs_huber_loss_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 114
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA::test_nn_scalars_reductions_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA::test_smooth_l1_loss_bfloat16_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 188
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA::test_smooth_l1_loss_vs_huber_loss_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 114
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCPU::test_state_dict_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 88
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCUDA::test_state_dict_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 88
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_module_pre_hook_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 195
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_post_hook_backward_compatibility_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 329
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_post_hook_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 264
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_pre_hook_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 162
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_module_pre_hook_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 195
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_post_hook_backward_compatibility_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 329
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_post_hook_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 264
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_pre_hook_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 162
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCPU::test_sum_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 32
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCUDA::test_sum_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 32
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/sum_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/synchronize_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/synchronize_test.py::TestCuda",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/synchronize_test.py::TestCuda::test_copy_streams",
                    "type": "TestCaseFunction",
                    "lineno": 117
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/synchronize_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/synchronize_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/synchronize_test.py::TestCuda",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCPU::test_tensor_set_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 66
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCUDA::test_tensor_set_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 66
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/tensor_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCPU::test_to_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 75
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCUDA::test_to_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 75
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_float64",
                    "type": "TestCaseFunction",
                    "lineno": 81
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_complex128",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 81
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_float64",
                    "type": "TestCaseFunction",
                    "lineno": 81
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCPU::test_unbind_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 31
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCUDA::test_unbind_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 31
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unbind_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCPU::test_unsqueeze_view_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 40
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCUDA::test_unsqueeze_view_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 40
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_indexing_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_indexing_duplicates_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 151
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_inplace_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 198
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_pyscalar_conversions_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 345
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_reentrant_priority_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 400
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_simple_reentrant_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_type_conversions_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 263
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_indexing_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 67
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_indexing_duplicates_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 151
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_inplace_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 198
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_pyscalar_conversions_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 345
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_reentrant_priority_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 400
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_simple_reentrant_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 319
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_type_conversions_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 263
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::DistributionsTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCPU::test_vonmises_shape_scalar_params_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 109
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCPU::test_vonmises_shape_tensor_params_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 99
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCUDA::test_vonmises_shape_scalar_params_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 109
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCUDA::test_vonmises_shape_tensor_params_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 99
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::DistributionsTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCPU::test_xavier_uniform_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 111
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCPU::test_xavier_uniform_errors_on_inputs_smaller_than_2d_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 100
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCUDA::test_xavier_uniform_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 111
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCUDA::test_xavier_uniform_errors_on_inputs_smaller_than_2d_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 100
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::NNTestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCPU::test_zero_grad_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 91
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCUDA::test_zero_grad_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 91
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::NNTestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestCase",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 97
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_bool",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_float16",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_float32",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_int16",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_int64",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_uint8",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_out_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 134
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 97
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_bool",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_complex64",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_float16",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_float32",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_int16",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_int64",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_uint8",
                    "type": "TestCaseFunction",
                    "lineno": 87
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_out_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 134
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCPU",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCPU::test_zeros_like_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 175
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCPU::test_zeros_like_multiple_device_cpu",
                    "type": "TestCaseFunction",
                    "lineno": 182
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCUDA",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCUDA::test_zeros_like_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 175
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCUDA::test_zeros_like_multiple_device_cuda",
                    "type": "TestCaseFunction",
                    "lineno": 182
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestCase",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCPU",
                    "type": "UnitTestCase"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCUDA",
                    "type": "UnitTestCase"
                }
            ]
        },
        {
            "nodeid": "src/pytorch_tests_reduced/__init__.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/pytorch_tests_reduced/Adamax_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Dataset_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/GELU_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/RProp_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Sequential_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Subset_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/Transformer_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/add_module_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/addr_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/apply_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/argsort_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cat_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/conv2d_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/cuda_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/diag_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/dropout_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/fliplr_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/group_norm_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/jvp_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/linear_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/log1p_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/logdet_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/lt_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/multinomial_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/ormqr_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/randperm_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/range_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/round_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/saddmm_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/size_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/state_dict_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/sum_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/synchronize_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/tensor_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/to_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/unbind_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/variable_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/vonmises_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py",
                    "type": "Module"
                },
                {
                    "nodeid": "src/pytorch_tests_reduced/zeros_test.py",
                    "type": "Module"
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCPU::test_adamax_cpu",
            "lineno": 228,
            "outcome": "passed",
            "setup": {
                "duration": 0.0007535089998782496,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.1111867330000678,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0037076220000926696,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Adamax_test.py::TestOptimCUDA::test_adamax_cuda",
            "lineno": 228,
            "outcome": "passed",
            "setup": {
                "duration": 0.001213014999848383,
                "outcome": "passed"
            },
            "call": {
                "duration": 2.5339828160001616,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0024580879999120953,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_depthwise_naive_groups_cpu_float16",
            "lineno": 197,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00046899100016162265,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010672749999685038,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 198, 'Skipped: Only runs on cuda')"
            },
            "teardown": {
                "duration": 0.0006186980001530173,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_depthwise_naive_groups_cpu_float32",
            "lineno": 197,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002974899998662295,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010174179999467015,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 198, 'Skipped: Only runs on cuda')"
            },
            "teardown": {
                "duration": 0.0006826070000442996,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_depthwise_naive_groups_cpu_float64",
            "lineno": 197,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002724650000800466,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011233190000439208,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 198, 'Skipped: Only runs on cuda')"
            },
            "teardown": {
                "duration": 0.0006565450000834971,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_groups_nobias_cpu",
            "lineno": 130,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032455199993819406,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.09171124799991048,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.006085897999810186,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_groups_wbias_cpu",
            "lineno": 159,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036743999999089283,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005403010999998514,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008056300000589545,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_Conv3d_module_same_padding_cpu",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029307099998732156,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.012140415999965626,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008192729999336734,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv3d_64bit_indexing_cpu",
            "lineno": 322,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003347619999658491,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.06799667999985104,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 323, 'Skipped: Insufficient cpu memory')"
            },
            "teardown": {
                "duration": 0.0011322509999445174,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_cudnn_ndhwc_cpu_float16",
            "lineno": 271,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003796920000240789,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010114399999565649,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 272, 'Skipped: Only runs on cuda')"
            },
            "teardown": {
                "duration": 0.0005710500001896435,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_cudnn_ndhwc_cpu_float32",
            "lineno": 271,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002907890000187763,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011490269998830627,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 272, 'Skipped: Only runs on cuda')"
            },
            "teardown": {
                "duration": 0.0006880979999550618,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_empty_channel_cpu_complex64",
            "lineno": 243,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029489400003512856,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03446911900005034,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000978769000084867,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_empty_channel_cpu_float32",
            "lineno": 243,
            "outcome": "passed",
            "setup": {
                "duration": 0.00039507800011051586,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013617032999945877,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008714149998922949,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_modules_raise_error_on_incorrect_input_size_cpu",
            "lineno": 90,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030552599992006435,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.11600275700016027,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001060499000004711,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_conv_shapecheck_cpu",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003791780000028666,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0519138600000133,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010060240001621423,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCPU::test_invalid_conv3d_cpu",
            "lineno": 45,
            "outcome": "passed",
            "setup": {
                "duration": 0.00037767300000268733,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0845381050000924,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011227429999962624,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_depthwise_naive_groups_cuda_float16",
            "lineno": 197,
            "outcome": "passed",
            "setup": {
                "duration": 0.001142019999861077,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.027261197999905562,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008342890000676562,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_depthwise_naive_groups_cuda_float32",
            "lineno": 197,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003355260000716953,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01551645900008225,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010812689999966096,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_depthwise_naive_groups_cuda_float64",
            "lineno": 197,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030619199992543145,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01006926500008376,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008181719999811321,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_groups_nobias_cuda",
            "lineno": 130,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029429899996102904,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007095918000004531,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007946220000576432,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_groups_wbias_cuda",
            "lineno": 159,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003019619998667622,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0054101299999729235,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005223169998771482,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_Conv3d_module_same_padding_cuda",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003218239999114303,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0035065360000317014,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000544264999916777,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv3d_64bit_indexing_cuda",
            "lineno": 322,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002656679998835898,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.06746997300001567,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 323, 'Skipped: Insufficient cuda:0 memory')"
            },
            "teardown": {
                "duration": 0.0009068669999123813,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_cudnn_ndhwc_cuda_float16",
            "lineno": 271,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00031824699999560835,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013584599998921476,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 272, 'Skipped: cuDNN version 7605 is available but 8005 required')"
            },
            "teardown": {
                "duration": 0.0006136980000519543,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_cudnn_ndhwc_cuda_float32",
            "lineno": 271,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00029583300010926905,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015966299999945477,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py', 272, 'Skipped: cuDNN version 7605 is available but 8005 required')"
            },
            "teardown": {
                "duration": 0.0016725049999877228,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_empty_channel_cuda_complex64",
            "lineno": 243,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026374400022177724,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.06309008499988522,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011655250000330852,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_empty_channel_cuda_float32",
            "lineno": 243,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003690990001814498,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.015989354999874195,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008781660001204727,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_modules_raise_error_on_incorrect_input_size_cuda",
            "lineno": 90,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032908699995459756,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.11436029599985886,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010534680000091612,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_conv_shapecheck_cuda",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036066999996364757,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.048164221999968504,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0017091519998757576,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Conv3d_test.py::TestConvolutionNNCUDA::test_invalid_conv3d_cuda",
            "lineno": 45,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003668399999696703,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08464878700010559,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011923130000468518,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_pin_memory_cpu",
            "lineno": 58,
            "outcome": "passed",
            "setup": {
                "duration": 0.00043221700002504804,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005734909000011612,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008127470000545145,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_pin_memory_device_cpu",
            "lineno": 64,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003359130000717414,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013166979999823525,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py",
                    "lineno": 50,
                    "message": "NotImplementedError: Could not run 'aten::_pin_memory' with arguments from the 'CPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_pin_memory' is only available for these backends: [FPGA, UNKNOWN_TENSOR_TYPE_ID, QuantizedXPU, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseCPU, SparseCUDA, SparseHIP, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseXPU, UNKNOWN_TENSOR_TYPE_ID, SparseVE, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, NestedTensorCUDA, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID].\n\nCUDA: registered at aten/src/ATen/RegisterCUDA.cpp:51977 [kernel]\nBackendSelect: registered at aten/src/ATen/RegisterBackendSelect.cpp:726 [kernel]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:133 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at ../aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradMPS: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradIPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:13506 [kernel]\nAutocastCPU: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:481 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFunctionalize: registered at ../aten/src/ATen/FunctionalizeFallbackKernel.cpp:89 [backend fallback]\nPythonTLSSnapshot: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:137 [backend fallback]"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/Dataset_test.py",
                        "lineno": 68,
                        "message": ""
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 681,
                        "message": "in __next__"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 723,
                        "message": "in _next_data"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py",
                        "lineno": 55,
                        "message": "in pin_memory"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py",
                        "lineno": 55,
                        "message": "in <dictcomp>"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py",
                        "lineno": 50,
                        "message": "NotImplementedError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.Dataset_test.TestDictDataLoaderCPU testMethod=test_pin_memory_device_cpu>, device = 'cpu'\n\n    def test_pin_memory_device(self, device):\n        loader = DataLoader(self.dataset, batch_size=2,\n                            pin_memory=True, pin_memory_device=device)\n>       for sample in loader:\n\nsrc/pytorch_tests_reduced/Dataset_test.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:681: in __next__\n    data = self._next_data()\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:723: in _next_data\n    data = _utils.pin_memory.pin_memory(data, self._pin_memory_device)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py:55: in pin_memory\n    return type(data)({k: pin_memory(sample, device) for k, sample in data.items()})  # type: ignore[call-arg]\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py:55: in <dictcomp>\n    return type(data)({k: pin_memory(sample, device) for k, sample in data.items()})  # type: ignore[call-arg]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = tensor([[[0., 0.],\n         [0., 0.],\n         [0., 0.],\n         [0., 0.]],\n\n        [[1., 1.],\n         [1., 1.],\n         [1., 1.],\n         [1., 1.]]])\ndevice = 'cpu'\n\n    def pin_memory(data, device=None):\n        if isinstance(data, torch.Tensor):\n>           return data.pin_memory(device)\nE           NotImplementedError: Could not run 'aten::_pin_memory' with arguments from the 'CPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_pin_memory' is only available for these backends: [FPGA, UNKNOWN_TENSOR_TYPE_ID, QuantizedXPU, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseCPU, SparseCUDA, SparseHIP, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseXPU, UNKNOWN_TENSOR_TYPE_ID, SparseVE, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, NestedTensorCUDA, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID].\nE           \nE           CUDA: registered at aten/src/ATen/RegisterCUDA.cpp:51977 [kernel]\nE           BackendSelect: registered at aten/src/ATen/RegisterBackendSelect.cpp:726 [kernel]\nE           Python: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:133 [backend fallback]\nE           Named: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nE           Conjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nE           Negative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nE           ZeroTensor: registered at ../aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nE           ADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nE           AutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           UNKNOWN_TENSOR_TYPE_ID: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradMPS: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradIPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           UNKNOWN_TENSOR_TYPE_ID: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           AutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:11935 [autograd kernel]\nE           Tracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:13506 [kernel]\nE           AutocastCPU: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:481 [backend fallback]\nE           Autocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nE           Batched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nE           VmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nE           Functionalize: registered at ../aten/src/ATen/FunctionalizeFallbackKernel.cpp:89 [backend fallback]\nE           PythonTLSSnapshot: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:137 [backend fallback]\n\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/_utils/pin_memory.py:50: NotImplementedError"
            },
            "teardown": {
                "duration": 0.0011981699999523698,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_pin_memory_with_only_device_cpu",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034203699988211156,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013889689998904942,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006166000000575877,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCPU::test_sequential_batch_cpu",
            "lineno": 32,
            "outcome": "failed",
            "setup": {
                "duration": 0.0002627920000577433,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010249203000057605,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py",
                    "lineno": 66,
                    "message": "OSError: [Errno 12] Cannot allocate memory"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/Dataset_test.py",
                        "lineno": 42,
                        "message": ""
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 439,
                        "message": "in __iter__"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 390,
                        "message": "in _get_iterator"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 1077,
                        "message": "in __init__"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/process.py",
                        "lineno": 121,
                        "message": "in start"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py",
                        "lineno": 224,
                        "message": "in _Popen"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py",
                        "lineno": 281,
                        "message": "in _Popen"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py",
                        "lineno": 19,
                        "message": "in __init__"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py",
                        "lineno": 66,
                        "message": "OSError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.Dataset_test.TestDictDataLoaderCPU testMethod=test_sequential_batch_cpu>, device = 'cpu'\n\n    def test_sequential_batch(self, device):\n        for persistent_workers in (False, True):\n            if persistent_workers:\n                loader = DataLoader(self.dataset, batch_size=2, shuffle=False,\n                                    persistent_workers=persistent_workers, num_workers=1)\n            else:\n                loader = DataLoader(self.dataset, batch_size=2, shuffle=False,\n                                    persistent_workers=persistent_workers)\n            batch_size = loader.batch_size\n>           for i, sample in enumerate(loader):\n\nsrc/pytorch_tests_reduced/Dataset_test.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:439: in __iter__\n    self._iterator = self._get_iterator()\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:390: in _get_iterator\n    return _MultiProcessingDataLoaderIter(self)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:1077: in __init__\n    w.start()\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/process.py:121: in start\n    self._popen = self._Popen(self)\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py:224: in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py:281: in _Popen\n    return Popen(process_obj)\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py:19: in __init__\n    self._launch(process_obj)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <multiprocessing.popen_fork.Popen object at 0x7fbd319de920>, process_obj = <Process name='Process-1' parent=16108 initial daemon>\n\n    def _launch(self, process_obj):\n        code = 1\n        parent_r, child_w = os.pipe()\n        child_r, parent_w = os.pipe()\n>       self.pid = os.fork()\nE       OSError: [Errno 12] Cannot allocate memory\n\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py:66: OSError"
            },
            "teardown": {
                "duration": 0.0010281950001171936,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_pin_memory_cuda",
            "lineno": 58,
            "outcome": "passed",
            "setup": {
                "duration": 0.003405791999966823,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0021947679999811953,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006787190000068222,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_pin_memory_device_cuda",
            "lineno": 64,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028728199981742364,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019375490001038997,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00063126499981081,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_pin_memory_with_only_device_cuda",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027979100013908464,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0018812779999279883,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006769450001229416,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Dataset_test.py::TestDictDataLoaderCUDA::test_sequential_batch_cuda",
            "lineno": 32,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002542570000514388,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003169845999991594,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py",
                    "lineno": 66,
                    "message": "OSError: [Errno 12] Cannot allocate memory"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/Dataset_test.py",
                        "lineno": 42,
                        "message": ""
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 439,
                        "message": "in __iter__"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 390,
                        "message": "in _get_iterator"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
                        "lineno": 1077,
                        "message": "in __init__"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/process.py",
                        "lineno": 121,
                        "message": "in start"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py",
                        "lineno": 224,
                        "message": "in _Popen"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py",
                        "lineno": 281,
                        "message": "in _Popen"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py",
                        "lineno": 19,
                        "message": "in __init__"
                    },
                    {
                        "path": "/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py",
                        "lineno": 66,
                        "message": "OSError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.Dataset_test.TestDictDataLoaderCUDA testMethod=test_sequential_batch_cuda>, device = 'cuda:0'\n\n    def test_sequential_batch(self, device):\n        for persistent_workers in (False, True):\n            if persistent_workers:\n                loader = DataLoader(self.dataset, batch_size=2, shuffle=False,\n                                    persistent_workers=persistent_workers, num_workers=1)\n            else:\n                loader = DataLoader(self.dataset, batch_size=2, shuffle=False,\n                                    persistent_workers=persistent_workers)\n            batch_size = loader.batch_size\n>           for i, sample in enumerate(loader):\n\nsrc/pytorch_tests_reduced/Dataset_test.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:439: in __iter__\n    self._iterator = self._get_iterator()\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:390: in _get_iterator\n    return _MultiProcessingDataLoaderIter(self)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py:1077: in __init__\n    w.start()\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/process.py:121: in start\n    self._popen = self._Popen(self)\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py:224: in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/context.py:281: in _Popen\n    return Popen(process_obj)\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py:19: in __init__\n    self._launch(process_obj)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <multiprocessing.popen_fork.Popen object at 0x7fbd319c14b0>, process_obj = <Process name='Process-2' parent=16108 initial daemon>\n\n    def _launch(self, process_obj):\n        code = 1\n        parent_r, child_w = os.pipe()\n        child_r, parent_w = os.pipe()\n>       self.pid = os.fork()\nE       OSError: [Errno 12] Cannot allocate memory\n\n/home/cowfrica/miniconda3/lib/python3.10/multiprocessing/popen_fork.py:66: OSError"
            },
            "teardown": {
                "duration": 0.0009782310000900907,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCPU::test_sgd_cpu",
            "lineno": 48,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003945789999306726,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.1519063060000008,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001318024000056539,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ExponentialLR_test.py::TestOptimCUDA::test_sgd_cuda",
            "lineno": 48,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009562310001456353,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.242233477000127,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.003065370000058465,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCPU::test_transformerencoderlayer_gelu_cpu_float32",
            "lineno": 18,
            "outcome": "passed",
            "setup": {
                "duration": 0.0005251180000414024,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.04209731599985389,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011529780001637846,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCUDA::test_transformerencoderlayer_gelu_cuda_float16",
            "lineno": 18,
            "outcome": "passed",
            "setup": {
                "duration": 0.0012300839998715674,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.04352338500007136,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001160183999900255,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/GELU_test.py::TestNNDeviceTypeCUDA::test_transformerencoderlayer_gelu_cuda_float32",
            "lineno": 18,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003341930000715365,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03707381899994289,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001134572999944794,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCPU::test_lbfgs_cpu",
            "lineno": 204,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004243710000082501,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.5884963510000034,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011477200000626908,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/LBFGS_test.py::TestOptimCUDA::test_lbfgs_cuda",
            "lineno": 204,
            "outcome": "passed",
            "setup": {
                "duration": 0.001237374999845997,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.352098303000048,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001469873999894844,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCPU::test_rprop_cpu",
            "lineno": 313,
            "outcome": "passed",
            "setup": {
                "duration": 0.00045887300007052545,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.448100758999999,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011609420000695536,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/RProp_test.py::TestOptimCUDA::test_rprop_cuda",
            "lineno": 313,
            "outcome": "passed",
            "setup": {
                "duration": 0.0012991930000225693,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.832498058000056,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001491840999960914,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_append_cpu",
            "lineno": 149,
            "outcome": "passed",
            "setup": {
                "duration": 0.00045378200002232916,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006100908999997046,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006381810001130361,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_delitem_cpu",
            "lineno": 131,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003113040002062917,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006947076000187735,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007979350000368868,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_getitem_cpu",
            "lineno": 66,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002736149999691406,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006486752999990131,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005642670000725047,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_setitem_cpu",
            "lineno": 96,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002811089998431271,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0038930319999508356,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0027984989999367826,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCPU::test_Sequential_setitem_named_cpu",
            "lineno": 112,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002733470000748639,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006331302000035066,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000892481999926531,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_append_cuda",
            "lineno": 149,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010282490000008693,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010308545000043523,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.003637821999973312,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_delitem_cuda",
            "lineno": 131,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003345499999340973,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007453644999941389,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000912007000124504,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_getitem_cuda",
            "lineno": 66,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002812560001075326,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008210425000015675,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007204460000593826,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_setitem_cuda",
            "lineno": 96,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002866199999971286,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0073905760000343435,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008270650000667956,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Sequential_test.py::TestNNCUDA::test_Sequential_setitem_named_cuda",
            "lineno": 112,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002736330000061571,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006401429999868924,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007336260000556649,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCPU::test_slicing_of_subset_of_dataset_cpu",
            "lineno": 42,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003483689999939088,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005443414999945162,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0043523410001853335,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCPU::test_slicing_of_subset_of_subset_cpu",
            "lineno": 56,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002504560000033962,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002188774000160265,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0049051889998281695,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCUDA::test_slicing_of_subset_of_dataset_cuda",
            "lineno": 42,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009428079999906913,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007910929999979999,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009972759999072878,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Subset_test.py::TestDatasetRandomSplitCUDA::test_slicing_of_subset_of_subset_cuda",
            "lineno": 56,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028281600020818587,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00748583199992936,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.002803501000016695,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCPU::test_transformerencoder_cpu",
            "lineno": 73,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036145299986856116,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.18995906599980117,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011312859999179636,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/TransformerEncoderLayer_test.py::TestNNCUDA::test_transformerencoder_cuda",
            "lineno": 73,
            "outcome": "passed",
            "setup": {
                "duration": 0.0011987450000106037,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.2647499909999169,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0014458720002039627,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCPU::test_Transformer_cell_cpu",
            "lineno": 86,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004659120002088457,
                "outcome": "passed"
            },
            "call": {
                "duration": 2.884185996000042,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011334230000557,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/Transformer_test.py::TestNNCUDA::test_Transformer_cell_cuda",
            "lineno": 86,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009822819999953936,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.589379271000098,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.014653456999894843,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_avg_pool3d_output_size_one_cpu",
            "lineno": 35,
            "outcome": "passed",
            "setup": {
                "duration": 0.00046662299996569345,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004412815000023329,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009116459998494975,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_pool_invalid_cpu",
            "lineno": 52,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003020460001152969,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03549790900001426,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000970201999962228,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_pooling_zero_batch_cpu_float32",
            "lineno": 19,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003504040000734676,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006669177999810927,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007279939998170448,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCPU::test_adaptive_pooling_zero_batch_cpu_float64",
            "lineno": 19,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002762479998636991,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002072595000072397,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005990659999497439,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_avg_pool3d_output_size_one_cuda",
            "lineno": 35,
            "outcome": "passed",
            "setup": {
                "duration": 0.0015995159999420139,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0045414430001073924,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008461489999262994,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_pool_invalid_cuda",
            "lineno": 52,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003298320000340027,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011569795000013983,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000977439000052982,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_pooling_zero_batch_cuda_float32",
            "lineno": 19,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003714380000019446,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005431648000012501,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008955210000749503,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/adaptiveavgpool3d_test.py::TestPoolingNNDeviceTypeCUDA::test_adaptive_pooling_zero_batch_cuda_float64",
            "lineno": 19,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003142440000374336,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0030997369999568036,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00111690600010661,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_add_module_cpu",
            "lineno": 208,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00036481400002230657,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015855970000302477,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/add_module_test.py', 209, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005878839999695629,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_add_module_raises_error_if_attr_exists_cpu",
            "lineno": 187,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002787189998798567,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010113860000728891,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/add_module_test.py', 188, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005503979998593422,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_named_children_cpu",
            "lineno": 88,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002745169999798236,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.000939693999953306,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/add_module_test.py', 89, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0006494660001408192,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_named_modules_cpu",
            "lineno": 114,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002719709998473263,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015982959998837032,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/add_module_test.py', 115, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0006051850000403647,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_register_buffer_raises_error_if_attr_exists_cpu",
            "lineno": 147,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00028129299994361645,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010395320000498032,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/add_module_test.py', 148, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000581581999995251,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCPU::test_register_parameter_raises_error_if_attr_exists_cpu",
            "lineno": 167,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002513419999559119,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00202889199999845,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/add_module_test.py', 168, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000640627999928256,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_add_module_cuda",
            "lineno": 208,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010326589999749558,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00367872299989358,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009175049999612384,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_add_module_raises_error_if_attr_exists_cuda",
            "lineno": 187,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002813329999753478,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002194052000049851,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006682079999791313,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_named_children_cuda",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002909400000135065,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0027069269999628887,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000913087000071755,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_named_modules_cuda",
            "lineno": 114,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003055549998407514,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07592297899986988,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009432829999695969,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_register_buffer_raises_error_if_attr_exists_cuda",
            "lineno": 147,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035669900012180733,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002482039999904373,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008663510000133101,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/add_module_test.py::TestNNCUDA::test_register_parameter_raises_error_if_attr_exists_cuda",
            "lineno": 167,
            "outcome": "passed",
            "setup": {
                "duration": 0.000326699999959601,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002239325999880748,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009915690000070754,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_bool_cpu_bool",
            "lineno": 112,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003310059998966608,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.026494588000105068,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008426490001056663,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_bfloat16",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002924220000295463,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02660132899995915,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000921524999967005,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_complex128",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031559699982608436,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.028440406999834522,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00105320199986636,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_complex64",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003475480000361131,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02484315800006698,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008984470000541478,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_float16",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032633199998599594,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.027577705000112473,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000874726000120063,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_float32",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003341019998970296,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.019222627999852193,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005997389998810831,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_float_and_complex_cpu_float64",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029572099992947187,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.018694879000122455,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008704899998974724,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int16",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003399990000616526,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.039873052999837455,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0003177829999003734,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int32",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032056300005933736,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.041206310999996276,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0018274779999956081,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int64",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003503490002003673,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.031303754999953526,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010099020000780001,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_int8",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032771599990155664,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02720673299995724,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009602669999821956,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCPU::test_addr_integral_cpu_uint8",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032748400008131284,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.027779897999835157,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001073886000085622,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_bool_cuda_bool",
            "lineno": 112,
            "outcome": "passed",
            "setup": {
                "duration": 0.0011366579999503301,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.016163522999931956,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.002069183999992674,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_bfloat16",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003131640000901825,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.04791141000009702,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010624070000631036,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_complex128",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003223040000648325,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03082737999989149,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009407930001543718,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_complex64",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.000366455999937898,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03167288300005566,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00593967400004658,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_float16",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032373099998039834,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02542860100015787,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000780066000061197,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_float32",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033943199991881556,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.024002662999919266,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009308569999575411,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_float_and_complex_cuda_float64",
            "lineno": 139,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003278609999597393,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.022881825000013123,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001092933999871093,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int16",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003622450001330435,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03102417700006299,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010427600000184611,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int32",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035515199988367385,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03234608100001424,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011032410000098025,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int64",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003461049998350063,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03399211600003582,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010504510000828304,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_int8",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003835009999875183,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03225191100000302,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010620729999573086,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/addr_test.py::TestLinalgCUDA::test_addr_integral_cuda_uint8",
            "lineno": 119,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035648499988383264,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03229796100004023,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011783779998495447,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCPU::test_apply_cpu",
            "lineno": 76,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004166440000972216,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006054045000155384,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008300009999402391,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/apply_test.py::TestTorchCUDA::test_apply_cuda",
            "lineno": 76,
            "outcome": "failed",
            "setup": {
                "duration": 0.0009190979999402771,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003916638999953648,
                "outcome": "failed",
                "crash": {
                    "path": "/home/frasermince/portability/src/pytorch_tests_reduced/apply_test.py",
                    "lineno": 80,
                    "message": "TypeError: apply_ is only implemented on CPU tensors"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/apply_test.py",
                        "lineno": 80,
                        "message": "TypeError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.apply_test.TestTorchCUDA testMethod=test_apply_cuda>, device = 'cuda:0'\n\n    def test_apply(self, device):\n        x = torch.arange(1, 6, device=device)\n        with pytorch_op_timer():\n>           res = x.clone().apply_(lambda k: k + k)\nE           TypeError: apply_ is only implemented on CPU tensors\n\nsrc/pytorch_tests_reduced/apply_test.py:80: TypeError"
            },
            "teardown": {
                "duration": 0.0009160100000826787,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCPU::test_sort_cpu",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003310370000235707,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.019168426000078398,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006638449999627483,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/argsort_test.py::TestSortAndSelectCUDA::test_sort_cuda",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010653010001533403,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08507028600001831,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011773790001825546,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_buffer_update_when_stats_are_not_tracked_cpu",
            "lineno": 322,
            "outcome": "passed",
            "setup": {
                "duration": 0.00044841700014330854,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005465107999953034,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005327330000000075,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_cudnn_half_cpu",
            "lineno": 204,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027450499987935473,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.015432378000014069,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007215319999431813,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_cudnn_nhwc_cpu",
            "lineno": 157,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030867400005263335,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0076408549998632225,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008363859999462875,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_nhwc_cpu_cpu",
            "lineno": 92,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002869529998861253,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.019820382000034442,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005566600000292965,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_nhwc_cuda_cpu",
            "lineno": 341,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002875080001558672,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013029730000653217,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/batch_norm_test.py', 342, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0008053259998632711,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_non_contig_cpu_cpu",
            "lineno": 136,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028868700019302196,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019953579999310023,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005021110000598128,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_nonaffine_cuda_half_input_cpu",
            "lineno": 228,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00026292899997315544,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011944810000841244,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/batch_norm_test.py', 229, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005316310000580415,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_bias_is_not_same_size_as_input_cpu",
            "lineno": 283,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025535000008858333,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011257502000034947,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005749889999151492,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_less_than_one_value_per_channel_cpu",
            "lineno": 241,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002910580001298513,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0014069569999719533,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005091909999919153,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_running_mean_is_not_same_size_as_input_cpu",
            "lineno": 248,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025578700001460675,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01034216900006868,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004960720000326546,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_running_var_is_not_same_size_as_input_cpu",
            "lineno": 259,
            "outcome": "passed",
            "setup": {
                "duration": 0.000264505000131976,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010435520999863002,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005198019998715608,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_running_var_or_running_mean_have_forward_grad_cpu",
            "lineno": 296,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026840100008485024,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02149328600012268,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005985140001030231,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCPU::test_batchnorm_raises_error_if_weight_is_not_same_size_as_input_cpu",
            "lineno": 270,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030210399995667103,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01076015700004973,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008995919999961188,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_buffer_update_when_stats_are_not_tracked_cuda",
            "lineno": 322,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010417109999707463,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0035319470000558795,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008068980000643933,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_cudnn_half_cuda",
            "lineno": 204,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029933299992990214,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004370785999981308,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007797839998602285,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_cudnn_nhwc_cuda",
            "lineno": 157,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028202499993312813,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007484551000061401,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008575340000334108,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_nhwc_cpu_cuda",
            "lineno": 92,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002954819999558822,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.016084419000208072,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008604370000284689,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_nhwc_cuda_cuda",
            "lineno": 341,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003142890000162879,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0036740529999406135,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0017083239999919897,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_non_contig_cpu_cuda",
            "lineno": 136,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028055800021320465,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0025569199999608827,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008381539998936205,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_nonaffine_cuda_half_input_cuda",
            "lineno": 228,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003107469999577006,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0028346939998300513,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009381889999531268,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_bias_is_not_same_size_as_input_cuda",
            "lineno": 283,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002943160000086209,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011781618999975763,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008771630000410369,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_less_than_one_value_per_channel_cuda",
            "lineno": 241,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028876700002911093,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019831649999559886,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007074519999150652,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_running_mean_is_not_same_size_as_input_cuda",
            "lineno": 248,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002974149999772635,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011960892000161039,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006744519998846954,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_running_var_is_not_same_size_as_input_cuda",
            "lineno": 259,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002969249999296153,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013006047000089893,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0016569790000176,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_running_var_or_running_mean_have_forward_grad_cuda",
            "lineno": 296,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003047610000521672,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.018360514000050898,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006903390001298249,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/batch_norm_test.py::TestNNCUDA::test_batchnorm_raises_error_if_weight_is_not_same_size_as_input_cuda",
            "lineno": 270,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003057179999359505,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011755199999925026,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010498950000510376,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_broadcasts_pos_weights_cpu",
            "lineno": 127,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003741479999916919,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005452525999999125,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007837640000616375,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_broadcasts_weights_cpu",
            "lineno": 94,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028988399981244584,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0022578690000045754,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006060830000933493,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_gives_same_result_as_sigmoid_and_bce_loss_large_tensors_with_grad_cpu",
            "lineno": 51,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002863460001663043,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.057498267000028136,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011167039999691042,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_has_correct_grad_at_zero_cpu",
            "lineno": 86,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003263979999701405,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015497639999466628,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000617169000179274,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_ones_in_pos_weights_are_the_same_as_none_cpu",
            "lineno": 118,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026391799997327325,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0016102029999274237,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004909719998522633,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_stability_cpu",
            "lineno": 158,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002742310000485304,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013537340000766562,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000597401000050013,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCPU::test_bce_with_logits_with_pos_weight_has_correct_grad_at_zero_cpu",
            "lineno": 146,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023967600009200396,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013596619999134418,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008023059999686666,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_broadcasts_pos_weights_cuda",
            "lineno": 127,
            "outcome": "passed",
            "setup": {
                "duration": 0.0007631129999481345,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005819264999900042,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009606520000033925,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_broadcasts_weights_cuda",
            "lineno": 94,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028482100015025935,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0036813770000208024,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008189650000076654,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_gives_same_result_as_sigmoid_and_bce_loss_large_tensors_with_grad_cuda",
            "lineno": 51,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027409400013311824,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013964685000019017,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.003559536000011576,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_has_correct_grad_at_zero_cuda",
            "lineno": 86,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003136909999739146,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0033653440000307455,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006234160000531119,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_ones_in_pos_weights_are_the_same_as_none_cuda",
            "lineno": 118,
            "outcome": "passed",
            "setup": {
                "duration": 0.000286409999944226,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004121958000041559,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0034829979999813077,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_stability_cuda",
            "lineno": 158,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003287130000444449,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0040845749999789405,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006990179999775137,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bcewithlogitsloss_test.py::TestNLLLossCUDA::test_bce_with_logits_with_pos_weight_has_correct_grad_at_zero_cuda",
            "lineno": 146,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032930200018199685,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0033480239999335026,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010996209998666018,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCPU::test_bitwise_not_cpu",
            "lineno": 22,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036455800000112504,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012292070000512467,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005853830000432936,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/bitwise_not_test.py::TestNamedTensorCUDA::test_bitwise_not_cuda",
            "lineno": 22,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008735129999877245,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0033650129998932243,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007522220000737434,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCPU::test_broadcast_shapes_cpu",
            "lineno": 41,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036197399981574563,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010566725999979099,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008429020001585741,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCPU::test_broadcast_tensors_cpu_float32",
            "lineno": 27,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002750680000644934,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009753209999416868,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007717970001976937,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCUDA::test_broadcast_shapes_cuda",
            "lineno": 41,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010747270000592835,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01107548200002384,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009407570000803389,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/broadcast_tensors_test.py::TestOldViewOpsCUDA::test_broadcast_tensors_cuda_float32",
            "lineno": 27,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027431500006969145,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0018974330000673945,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008662749999075459,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat2_cpu_float16",
            "lineno": 289,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003233049999380455,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006152978999807601,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005161300000509073,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat2_cpu_float64",
            "lineno": 289,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002681019998362899,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004881752000073902,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008054059999267338,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat2_cpu_int32",
            "lineno": 289,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002641739999944548,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0043554150001909875,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006854630000816542,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_all_dtypes_and_devices_cpu",
            "lineno": 28,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023461799992219312,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0060519989999647805,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007076169999891135,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_big_cpu",
            "lineno": 275,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00027580799996940186,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0007814279999820428,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 276, 'Skipped: test is slow; run with PYTORCH_TEST_WITH_SLOW to enable test')"
            },
            "teardown": {
                "duration": 0.0006578989998615725,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_cpu",
            "lineno": 250,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00033052800017685513,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008882300001005206,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 251, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005503610000232584,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_empty_cpu",
            "lineno": 60,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002588069999092113,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002043948999926215,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00050171899988527,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_empty_legacy_cpu",
            "lineno": 44,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002325100001598912,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0024458350001168583,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005589419999978418,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_in_channels_last_cpu",
            "lineno": 123,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024897799994505476,
                "outcome": "passed"
            },
            "call": {
                "duration": 2.6285156829999323,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001104557999951794,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_mem_overlap_cpu",
            "lineno": 21,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003578820001166605,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.016660635999869555,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005724599998302438,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_out_channels_last_cpu",
            "lineno": 113,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002784539999538538,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015183519999482087,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006869510000342416,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_out_cpu",
            "lineno": 74,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026009099997281737,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003363024000009318,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007904540000254201,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_out_memory_format_cpu",
            "lineno": 174,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003066729998408846,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009349960000690771,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 175, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005392969999320485,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_preserve_channels_last_cpu",
            "lineno": 151,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002667779999683262,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001590310999972644,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005133480001404678,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCPU::test_cat_stack_cross_devices_cpu",
            "lineno": 235,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00027614999999059364,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010591360000944405,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 236, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0006553180000992143,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat2_cuda_float16",
            "lineno": 289,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0009732080000048882,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012477389998366561,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 290, 'Skipped: Only runs on cpu')"
            },
            "teardown": {
                "duration": 0.0006749340000169468,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat2_cuda_float64",
            "lineno": 289,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00029095700006109837,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001248234000058801,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 290, 'Skipped: Only runs on cpu')"
            },
            "teardown": {
                "duration": 0.0018687289998524648,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat2_cuda_int32",
            "lineno": 289,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002807079999911366,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015438670000094135,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 290, 'Skipped: Only runs on cpu')"
            },
            "teardown": {
                "duration": 0.0005347620001430187,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_all_dtypes_and_devices_cuda",
            "lineno": 28,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026331999993089994,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01635472399993887,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008567790000597597,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_big_cuda",
            "lineno": 275,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002683699999579403,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010352679998959502,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py', 276, 'Skipped: test is slow; run with PYTORCH_TEST_WITH_SLOW to enable test')"
            },
            "teardown": {
                "duration": 0.0005511120000392111,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_cuda",
            "lineno": 250,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002651629999945726,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0076761029999943275,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008163919999333302,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_empty_cuda",
            "lineno": 60,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002779949998057418,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002562802999818814,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006289319999268628,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_empty_legacy_cuda",
            "lineno": 44,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026153999988309806,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0025015500000336033,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007126869998046459,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_in_channels_last_cuda",
            "lineno": 123,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002842399999281042,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07063822999998592,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.011538192999978492,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_mem_overlap_cuda",
            "lineno": 21,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031006199992589245,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008874088000084157,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000999115000013262,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_out_channels_last_cuda",
            "lineno": 113,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028760899999724643,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019336759999077913,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005062340001131815,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_out_cuda",
            "lineno": 74,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030203500000425265,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004747145999999702,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008773659999405936,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_out_memory_format_cuda",
            "lineno": 174,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026862400000027264,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0034439379999184894,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009056090000285621,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_preserve_channels_last_cuda",
            "lineno": 151,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028090299997529655,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002887031999989631,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008805489999303973,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cat_test.py::TestTensorCreationCUDA::test_cat_stack_cross_devices_cuda",
            "lineno": 235,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025389000006725837,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01949538600001688,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008247810001194011,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_add_dataset_cpu",
            "lineno": 158,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003503239997826313,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019063490001371974,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007349520001298515,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_raises_index_error_cpu",
            "lineno": 150,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002469010000822891,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010366619999331306,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006881060000978323,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_two_non_singletons_cpu",
            "lineno": 132,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002418159999706404,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008052230000430427,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007430269999986194,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_two_non_singletons_with_empty_cpu",
            "lineno": 140,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025894599980347266,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011368809998657525,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007926340001631615,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_concat_two_singletons_cpu",
            "lineno": 125,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026866500002142857,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010063800000352785,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005248689999461931,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCPU::test_iterable_dataset_err_cpu",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00022873099987918977,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011224340000808297,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008193139999548293,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_add_dataset_cuda",
            "lineno": 158,
            "outcome": "passed",
            "setup": {
                "duration": 0.0007129579998945701,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003114133000053698,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008447679999790125,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_raises_index_error_cuda",
            "lineno": 150,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003188670000326965,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001355649000061021,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007302450001134275,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_two_non_singletons_cuda",
            "lineno": 132,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002958200000193756,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0014540360000410146,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007322820001718355,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_two_non_singletons_with_empty_cuda",
            "lineno": 140,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003210419999959413,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001561120999895138,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000796835999835821,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_concat_two_singletons_cuda",
            "lineno": 125,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002684190001218667,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0016218149999076559,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005191010000089591,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/concatdataset_test.py::TestConcatDatasetCUDA::test_iterable_dataset_err_cuda",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002855269999599841,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0028912450000007084,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009539390000554704,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_backward_depthwise_cpu_complex128",
            "lineno": 499,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003213790000700101,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009380999999848427,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 500, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0016780829998879199,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_backward_depthwise_cpu_float64",
            "lineno": 499,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002746780000961735,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0007509879999361146,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 500, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0007308470001134992,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_depthwise_naive_groups_cpu_float16",
            "lineno": 391,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002593980000256124,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.000814682000054745,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 392, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000573921000068367,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_depthwise_naive_groups_cpu_float32",
            "lineno": 391,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00024145799989128136,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008846140001423919,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 392, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000799704999963069,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_depthwise_naive_groups_cpu_float64",
            "lineno": 391,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00026685600005293963,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008725609998236905,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 392, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0007657730000119045,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_deterministic_cudnn_cpu_float16",
            "lineno": 296,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002414359998965665,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009308609999152395,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 297, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005464989999381942,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_deterministic_cudnn_cpu_float32",
            "lineno": 296,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002460799998971197,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001172654999891165,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 297, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0006920670000454265,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_deterministic_cudnn_cpu_float64",
            "lineno": 296,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00025507800000923453,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009248799999568291,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 297, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005257119998987037,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_large_workspace_cpu_float16",
            "lineno": 319,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002520139998978266,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0007993880001322395,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 320, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000558902999955535,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_large_workspace_cpu_float32",
            "lineno": 319,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002618619998884242,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009036369999648741,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 320, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0007711630000812875,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_large_workspace_cpu_float64",
            "lineno": 319,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002648390000103973,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008375059999252699,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 320, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0006536569999298081,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_naive_groups_cpu_float32",
            "lineno": 460,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024190499993892445,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.014745488000016849,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0027075210000475636,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCPU::test_Conv2d_size_1_kernel_cpu",
            "lineno": 439,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002985739999985526,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0007751979999284231,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 440, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0008196500000394735,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_backward_depthwise_cuda_complex128",
            "lineno": 499,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008965880001596815,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.769673867999927,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0013193100000989944,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_backward_depthwise_cuda_float64",
            "lineno": 499,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004265469999609195,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.17656288299986045,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011801139999079169,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_depthwise_naive_groups_cuda_float16",
            "lineno": 391,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003742100000181381,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0160500200001934,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006901410001773911,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_depthwise_naive_groups_cuda_float32",
            "lineno": 391,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003158370000164723,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.009898081999835995,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008799329998510075,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_depthwise_naive_groups_cuda_float64",
            "lineno": 391,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030525199986186635,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008812032999912844,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008605090001765348,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_deterministic_cudnn_cuda_float16",
            "lineno": 296,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0002954760000193346,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001320624000072712,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 297, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cuda\")"
            },
            "teardown": {
                "duration": 0.000401973999942129,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_deterministic_cudnn_cuda_float32",
            "lineno": 296,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00033081999981732224,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0014522750000196538,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 297, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cuda\")"
            },
            "teardown": {
                "duration": 0.0005715880001844198,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_deterministic_cudnn_cuda_float64",
            "lineno": 296,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00028444300005503464,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012543570001071203,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 297, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cuda\")"
            },
            "teardown": {
                "duration": 0.0006715489998896373,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_large_workspace_cuda_float16",
            "lineno": 319,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028515400003925606,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.1306378870001481,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.006338604999882591,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_large_workspace_cuda_float32",
            "lineno": 319,
            "outcome": "passed",
            "setup": {
                "duration": 0.00039680899999439134,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.14654832599990186,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.009255090999886306,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_large_workspace_cuda_float64",
            "lineno": 319,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004040680000798602,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.545291829000007,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.009550381000053676,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_naive_groups_cuda_float16",
            "lineno": 460,
            "outcome": "passed",
            "setup": {
                "duration": 0.00043791400003101444,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008746445000042513,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0014939099999082828,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_naive_groups_cuda_float32",
            "lineno": 460,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003408860000035929,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006741632000057507,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0015831350001462852,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_naive_groups_cuda_float64",
            "lineno": 460,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003074830001423834,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006649770999956672,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007824350000191771,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNDeviceTypeCUDA::test_Conv2d_size_1_kernel_cuda",
            "lineno": 439,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028317999999671883,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006608880999920075,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009627740000723861,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_1x1_cpu",
            "lineno": 110,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003201510000963026,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.022881045000076483,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000789314999792623,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_OneDNN_cpu",
            "lineno": 121,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003386399998817069,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02008154000009199,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008381539998936205,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_backward_twice_cpu",
            "lineno": 176,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002944789998764463,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.016293166999957975,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005544240000290301,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_groups_nobias_cpu",
            "lineno": 189,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002766719999272027,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.009895111000105317,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009305309999945166,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_groups_nobias_v2_cpu",
            "lineno": 232,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029352799992921064,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011852730000100564,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009785689999262104,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_inconsistent_types_cpu",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003038569998352614,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011168938999844613,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000811928000075568,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_inconsistent_types_on_GPU_with_cudnn_cpu",
            "lineno": 157,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00032267400001728674,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0021349829999053327,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 158, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0005722580001474853,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_inconsistent_types_on_GPU_without_cudnn_cpu",
            "lineno": 94,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003852490001463593,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015363549998710369,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/conv2d_test.py', 95, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0007485549999728391,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_missing_argument_cpu",
            "lineno": 172,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030214200000955316,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013458040000386973,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005806389999634121,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCPU::test_Conv2d_module_same_padding_cpu",
            "lineno": 46,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029152199999771256,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007893374999866865,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008805150000625872,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_1x1_cuda",
            "lineno": 110,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010100580000198534,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.015050980999831154,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010783599998376303,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_OneDNN_cuda",
            "lineno": 121,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034191899999314046,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011233257999947455,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006654549999893788,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_backward_twice_cuda",
            "lineno": 176,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029029799998170347,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008416644999897471,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0046390449999762495,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_groups_nobias_cuda",
            "lineno": 189,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002766299999166222,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010851891000129399,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008752989999720739,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_groups_nobias_v2_cuda",
            "lineno": 232,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029449700014083646,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01001226600010341,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008038519999900018,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_inconsistent_types_cuda",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002756010001121467,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011338257000033991,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008446440001534938,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_inconsistent_types_on_GPU_with_cudnn_cuda",
            "lineno": 157,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003120969997780776,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.018405891999918822,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000862507999954687,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_inconsistent_types_on_GPU_without_cudnn_cuda",
            "lineno": 94,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003409020000617602,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.034977295000089725,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0012767020000410412,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_missing_argument_cuda",
            "lineno": 172,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003825609999239532,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0022895189999871945,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005479970000124013,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/conv2d_test.py::TestConvolutionNNCUDA::test_Conv2d_module_same_padding_cuda",
            "lineno": 46,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003260379999119323,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006799364000016794,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010388390001025982,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCPU::test_device_cpu",
            "lineno": 65,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003439489998982026,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.015940772000021752,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005628629999137047,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/cuda_test.py::TestTorchCUDA::test_device_cuda",
            "lineno": 65,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010238700001536927,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.017159524999897258,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007760979999602569,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCPU::test_to_cpu",
            "lineno": 66,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003760750000765256,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.023721514000044408,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010963649999666814,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/data_ptr_test.py::TestTorchCUDA::test_to_cuda",
            "lineno": 66,
            "outcome": "failed",
            "setup": {
                "duration": 0.0007872580001730967,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0031341800001882802,
                "outcome": "failed",
                "crash": {
                    "path": "/home/frasermince/portability/src/pytorch_tests_reduced/data_ptr_test.py",
                    "lineno": 116,
                    "message": "AssertionError: Scalars are not equal!\n\nAbsolute difference: 140447688356672\nRelative difference: 70912.87909587413"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/data_ptr_test.py",
                        "lineno": 68,
                        "message": ""
                    },
                    {
                        "path": "src/pytorch_tests_reduced/data_ptr_test.py",
                        "lineno": 140,
                        "message": "in _test_to_with_layout"
                    },
                    {
                        "path": "src/pytorch_tests_reduced/data_ptr_test.py",
                        "lineno": 116,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.data_ptr_test.TestTorchCUDA testMethod=test_to_cuda>, device = 'cuda:0'\n\n    def test_to(self, device):\n>       self._test_to_with_layout(torch.strided, device=device)\n\nsrc/pytorch_tests_reduced/data_ptr_test.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/pytorch_tests_reduced/data_ptr_test.py:140: in _test_to_with_layout\n    test_data_ptr(lambda a: a.data_ptr())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ngetter = <function TestTorch._test_to_with_layout.<locals>.<lambda> at 0x7fbd319af910>\n\n    def test_data_ptr(getter):\n        with pytorch_op_timer():\n            test_1 = getter(a)\n>       self.assertEqual(test_1, getter(a.to('cpu')))\nE       AssertionError: Scalars are not equal!\nE       \nE       Absolute difference: 140447688356672\nE       Relative difference: 70912.87909587413\n\nsrc/pytorch_tests_reduced/data_ptr_test.py:116: AssertionError"
            },
            "teardown": {
                "duration": 0.0009339939999790658,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCPU::test_diag_cpu_bool",
            "lineno": 23,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035681100007423083,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0022863250001137203,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000811225999996168,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCPU::test_diag_cpu_float32",
            "lineno": 23,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026634999994712416,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011040800000046147,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005979950001346879,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCUDA::test_diag_cuda_bool",
            "lineno": 23,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009368369999265269,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07401765200006594,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001315693000151441,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/diag_test.py::TestShapeOpsCUDA::test_diag_cuda_float32",
            "lineno": 23,
            "outcome": "passed",
            "setup": {
                "duration": 0.00037780500019835017,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002943556999980501,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010326730000542739,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCPU::test_Dropout3d_cpu",
            "lineno": 124,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003604290000112087,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.016798003000076278,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005710489999728452,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNDeviceTypeCUDA::test_Dropout3d_cuda",
            "lineno": 124,
            "outcome": "passed",
            "setup": {
                "duration": 0.000981359999968845,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02087356699985321,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010812190000706323,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCPU::test_invalid_dropout_p_cpu",
            "lineno": 19,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035387999992053665,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009839309998369572,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005801159998100047,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout3d_test.py::TestDropoutNNCUDA::test_invalid_dropout_p_cuda",
            "lineno": 19,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009537710000131483,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0017347450000215758,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009792519999791693,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCPU::test_empty_dropout_cpu",
            "lineno": 166,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032902799989642517,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0011260349999702157,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005751549999786221,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNDeviceTypeCUDA::test_empty_dropout_cuda",
            "lineno": 166,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008592919998591242,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003051429999914035,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009083990000817721,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCPU::test_invalid_dropout_p_cpu",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003167820000271604,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003221178999865515,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008140800000546733,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCPU::test_native_dropout_corner_case_cpu",
            "lineno": 34,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026701199999479286,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003943880000178979,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0013616730000194366,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCUDA::test_invalid_dropout_p_cuda",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009011470001496491,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0025168519998715055,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007246360000863206,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/dropout_test.py::TestDropoutNNCUDA::test_native_dropout_corner_case_cuda",
            "lineno": 34,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003041059999304707,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003814762000047267,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009072119999018469,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_cpu_complex128",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036416499983715767,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0056985620001341886,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007704140000441839,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_cpu_float64",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026679500001591805,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0025668109999514854,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007857890000195766,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_cpu_int64",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002667750000000524,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002147219999869776,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007493079999676411,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_invalid_cpu_complex128",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002520989999084122,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008099714999843854,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007529530000738305,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_invalid_cpu_float64",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025716599998304446,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006629414000144607,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005818519998683769,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_fliplr_invalid_cpu_int64",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028061200009688037,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006568639999841253,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005488059998697281,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_flipud_cpu_complex128",
            "lineno": 80,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026674400010051613,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0031663380000281904,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005425550000381918,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_flipud_cpu_float64",
            "lineno": 80,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027220200013289286,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002906499000118856,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000806309000154215,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCPU::test_flipud_cpu_int64",
            "lineno": 80,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002715200000693585,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0024084310000489495,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000812226999869381,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_cuda_complex128",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010329980000278738,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005032528999890928,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001110595000000103,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_cuda_float64",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003080330000102549,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0034994279999409628,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009320909998677962,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_cuda_int64",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028639599986490794,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0032236790000297333,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009755280000263156,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_invalid_cuda_complex128",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003464970000095491,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008551964999924166,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008875070000158303,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_invalid_cuda_float64",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002924790001088695,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007271234999961962,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000876080000125512,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_fliplr_invalid_cuda_int64",
            "lineno": 72,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030430400011027814,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00713720499993542,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008796500001153618,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_flipud_cuda_complex128",
            "lineno": 80,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031931499984239053,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004360292999990634,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009083989998543984,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_flipud_cuda_float64",
            "lineno": 80,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003099779999047314,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003767997000068135,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006527329999244103,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/fliplr_test.py::TestShapeOpsCUDA::test_flipud_cuda_int64",
            "lineno": 80,
            "outcome": "passed",
            "setup": {
                "duration": 0.000287028000002465,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0037601149999773043,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010124009997980465,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCPU::test_group_norm_cpu",
            "lineno": 138,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032553999994888727,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.18509544299991,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0018031699999028206,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/group_norm_test.py::TestQuantizedOpsCUDA::test_group_norm_cuda",
            "lineno": 138,
            "outcome": "failed",
            "setup": {
                "duration": 0.0012113799998587638,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.009699375000082,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/_ops.py",
                    "lineno": 143,
                    "message": "NotImplementedError: Could not run 'quantized::group_norm' with arguments from the 'QuantizedCUDA' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'quantized::group_norm' is only available for these backends: [Negative, UNKNOWN_TENSOR_TYPE_ID, QuantizedXPU, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseCPU, SparseCUDA, SparseHIP, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseVE, UNKNOWN_TENSOR_TYPE_ID, NestedTensorCUDA, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID].\n\nQuantizedCPU: registered at ../aten/src/ATen/native/quantized/cpu/qnormalization.cpp:119 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:133 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at ../aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:35 [backend fallback]\nAutogradCPU: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:39 [backend fallback]\nAutogradCUDA: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:47 [backend fallback]\nAutogradXLA: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:51 [backend fallback]\nAutogradMPS: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:59 [backend fallback]\nAutogradXPU: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:43 [backend fallback]\nAutogradHPU: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:68 [backend fallback]\nAutogradLazy: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:55 [backend fallback]\nTracer: registered at ../torch/csrc/autograd/TraceTypeManual.cpp:295 [backend fallback]\nAutocastCPU: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:481 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFunctionalize: registered at ../aten/src/ATen/FunctionalizeFallbackKernel.cpp:89 [backend fallback]\nPythonTLSSnapshot: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:137 [backend fallback]"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/group_norm_test.py",
                        "lineno": 214,
                        "message": ""
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/_ops.py",
                        "lineno": 143,
                        "message": "NotImplementedError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.group_norm_test.TestQuantizedOpsCUDA testMethod=test_group_norm_cuda>, device = 'cuda:0'\n\n    @skipIfNoFBGEMM\n    def test_group_norm(self, device):\n        # hypothesis is flaky for this test, create test cases manually\n        batches_list = (1, 7)\n        num_groups_list = (1, 4)\n        channels_per_groups = (1, 36, 72)\n        elements_per_channels = (8, 128, 1024)\n        torch_types = (torch.qint8, torch.quint8)\n        y_scales = (0.1, 4.23)\n        y_zero_points = (0, 1)\n        channels_last_list = [True, False]\n        affine_list = [True, False]\n        combined = [batches_list, num_groups_list, channels_per_groups, elements_per_channels,\n                    torch_types, y_scales, y_zero_points, channels_last_list, affine_list]\n        test_cases = itertools.product(*combined)\n    \n        with override_quantized_engine(\"fbgemm\"):\n            for test_case in test_cases:\n    \n                batches, num_groups, channels_per_group, elements_per_channel, \\\n                    torch_type, Y_scale, Y_zero_point, channels_last, \\\n                    affine = test_case\n                num_channels = num_groups * channels_per_group\n                # minimum rank for channels_last\n                shapes = (batches, num_channels, elements_per_channel, 1)\n    \n                # In the FP kernel, sums and sums of squares are calculated in floating point.\n                # In the int8 and uint8 versions of the quantized kernel, they are\n                # calculated in integer arithmetic (which is exact).\n                # Because of this, the numerics do not always match exactly which is\n                # expected and acceptable. We do the following to allow this failure\n                # in this test:\n                # 1. do not use Hypothesis to generate the input tensor.  Hypothesis\n                #    favors homogeneous inputs in its search strategies which isn't\n                #    representative of the inputs we care about, and tends to maximize\n                #    this particular numerics difference.\n                # 2. allow a small % of off by Y_scale errors.  Even when the\n                #    variance of the input is high, there can be off by one errors\n                #    in the result if the input value happens to fall exactly on\n                #    the bin boundary of the output scale.\n                #\n                # If we want the numerics to match we could switch to calculating\n                # mean+var in floating point in the future, at the cost of speed.\n                X, X_scale, X_zero_point = \\\n                    _get_random_tensor_and_q_params(shapes, 1.0, torch_type)\n    \n                # Initialize the weights non-randomly for reproducibility\n                if affine:\n                    weight = torch.ones(num_channels, device=device).float() * 0.5\n                    bias = torch.ones(num_channels, device=device).float()\n                    for i in range(num_channels):\n                        weight[i] *= i\n                        bias[i] *= i\n                else:\n                    weight = None\n                    bias = None\n    \n                eps = 0.001\n    \n                qX = torch.quantize_per_tensor(X, X_scale, X_zero_point, torch_type)\n                if channels_last:\n                    qX = qX.contiguous(memory_format=torch.channels_last)\n                dqX = qX.dequantize()\n    \n                # Enforce non-homogeneous inputs\n                for batch_idx in range(batches):\n                    for group_idx in range(num_groups):\n                        ch_start = group_idx * channels_per_group\n                        ch_end = ch_start + channels_per_group\n                        group_vals = dqX[batch_idx][ch_start:ch_end]\n                        assume(\n                            float(torch.unique(group_vals).shape[0]) / group_vals.numel() > 0.001\n                            or group_vals.numel() < 5)\n    \n                with pytorch_op_timer():\n>                   qY = torch.ops.quantized.group_norm(qX, num_groups, weight, bias, eps, Y_scale, Y_zero_point)\n\nsrc/pytorch_tests_reduced/group_norm_test.py:214: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <OpOverloadPacket(op='quantized.group_norm')>\nargs = (tensor([[[[-0.3411],\n          [-0.0971],\n          [-0.2414],\n          [-0.1338],\n          [-0.3411],\n          [ ...36933190375566,\n       zero_point=2), 1, tensor([0.], device='cuda:0'), tensor([0.], device='cuda:0'), 0.001, 0.1, ...)\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        # overloading __call__ to ensure torch.ops.foo.bar()\n        # is still callable from JIT\n        # We save the function ptr as the `op` attribute on\n        # OpOverloadPacket to access it here.\n>       return self._op(*args, **kwargs or {})\nE       NotImplementedError: Could not run 'quantized::group_norm' with arguments from the 'QuantizedCUDA' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'quantized::group_norm' is only available for these backends: [Negative, UNKNOWN_TENSOR_TYPE_ID, QuantizedXPU, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseCPU, SparseCUDA, SparseHIP, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, SparseVE, UNKNOWN_TENSOR_TYPE_ID, NestedTensorCUDA, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID, UNKNOWN_TENSOR_TYPE_ID].\nE       \nE       QuantizedCPU: registered at ../aten/src/ATen/native/quantized/cpu/qnormalization.cpp:119 [kernel]\nE       BackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nE       Python: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:133 [backend fallback]\nE       Named: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nE       Conjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nE       Negative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nE       ZeroTensor: registered at ../aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nE       ADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nE       AutogradOther: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:35 [backend fallback]\nE       AutogradCPU: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:39 [backend fallback]\nE       AutogradCUDA: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:47 [backend fallback]\nE       AutogradXLA: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:51 [backend fallback]\nE       AutogradMPS: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:59 [backend fallback]\nE       AutogradXPU: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:43 [backend fallback]\nE       AutogradHPU: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:68 [backend fallback]\nE       AutogradLazy: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:55 [backend fallback]\nE       Tracer: registered at ../torch/csrc/autograd/TraceTypeManual.cpp:295 [backend fallback]\nE       AutocastCPU: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:481 [backend fallback]\nE       Autocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nE       Batched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nE       VmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nE       Functionalize: registered at ../aten/src/ATen/FunctionalizeFallbackKernel.cpp:89 [backend fallback]\nE       PythonTLSSnapshot: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:137 [backend fallback]\n\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/_ops.py:143: NotImplementedError"
            },
            "teardown": {
                "duration": 0.0009529459998702805,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCPU::test_is_same_size_cpu",
            "lineno": 69,
            "outcome": "passed",
            "setup": {
                "duration": 0.00037234199999147677,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008088380000117468,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007852920000459562,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/is_same_size_test.py::TestTorchCUDA::test_is_same_size_cuda",
            "lineno": 69,
            "outcome": "passed",
            "setup": {
                "duration": 0.0011096020000422868,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.06583114899990505,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010045639999134437,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jacobian_match_vjp_jvp_base_tensor_cpu",
            "lineno": 328,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003776820001348824,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003052371999956449,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006729169999744045,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jacobian_match_vjp_jvp_logging_tensor_cpu",
            "lineno": 328,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002822420001393766,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01627101200006109,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006900949999817385,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_create_graph_base_tensor_cpu",
            "lineno": 283,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002506600001197512,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.04911072300001251,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007768349998968915,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_create_graph_logging_tensor_cpu",
            "lineno": 283,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028738899982272414,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.29031490800002757,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010227490001852857,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_base_tensor_cpu",
            "lineno": 127,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034553299997241993,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0027134500001011475,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000686736000034216,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_logging_tensor_cpu",
            "lineno": 127,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003729889999704028,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00469123299990315,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007740350001768093,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_strict_base_tensor_cpu",
            "lineno": 156,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025241699995603994,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0028107720002026326,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000535300000137795,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_err_check_strict_logging_tensor_cpu",
            "lineno": 156,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024933399981819093,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005858304999946995,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007227149999380345,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_no_grad_base_tensor_cpu",
            "lineno": 193,
            "outcome": "passed",
            "setup": {
                "duration": 0.000244765999923402,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015919600000415812,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004845070000101259,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_no_grad_logging_tensor_cpu",
            "lineno": 193,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002668969998467219,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0032622629998968478,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007154209999953309,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_output_base_tensor_cpu",
            "lineno": 216,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002417640000658139,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0022911720000138303,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007518100001107086,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_output_logging_tensor_cpu",
            "lineno": 216,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002705960000639607,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005441062000045349,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008650900001612172,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_scalar_base_tensor_cpu",
            "lineno": 256,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008527989998583507,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002438459999893894,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007462829998985399,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCPU::test_jvp_scalar_logging_tensor_cpu",
            "lineno": 256,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002612780001527426,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005078746999970463,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009000099998957012,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jacobian_match_vjp_jvp_base_tensor_cuda",
            "lineno": 328,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009666700000252604,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004666019000069355,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008247260000189272,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jacobian_match_vjp_jvp_logging_tensor_cuda",
            "lineno": 328,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003502550000575866,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.014152340999999069,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006818599999860453,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_create_graph_base_tensor_cuda",
            "lineno": 283,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002956569999241765,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05916373300010491,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008028859999740234,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_create_graph_logging_tensor_cuda",
            "lineno": 283,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033449700003984617,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.30470525200007614,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009263849999570084,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_base_tensor_cuda",
            "lineno": 127,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004027049999422161,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003112606000058804,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009893799999645125,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_logging_tensor_cuda",
            "lineno": 127,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003315599999496044,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004491973999847687,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000682675999996718,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_strict_base_tensor_cuda",
            "lineno": 156,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002992439999616181,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003998422999984541,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006392469999809691,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_err_check_strict_logging_tensor_cuda",
            "lineno": 156,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029574199993476213,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007670593999819175,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008257599999978993,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_no_grad_base_tensor_cuda",
            "lineno": 193,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026265699989380664,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002795547000005172,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006391349998011719,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_no_grad_logging_tensor_cuda",
            "lineno": 193,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028372599990689196,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0043064740000318125,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007649179999589251,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_output_base_tensor_cuda",
            "lineno": 216,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002601140001843305,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0027305799999339797,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008611060000021098,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_output_logging_tensor_cuda",
            "lineno": 216,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027283400004307623,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006570530000090002,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006409530001292296,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_scalar_base_tensor_cuda",
            "lineno": 256,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002835280001818319,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00314557199999399,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006680420001430321,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/jvp_test.py::TestAutogradFunctionalCUDA::test_jvp_scalar_logging_tensor_cuda",
            "lineno": 256,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002692000000479311,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0063698139999814885,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008197580000341986,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCPU::test_KLDivLoss_batch_mean_cpu",
            "lineno": 90,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003743239999494108,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004851546000054441,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006817299999966053,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCPU::test_KLDivLoss_batch_mean_log_target_cpu",
            "lineno": 105,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024709300009817525,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013667179998719803,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006048360000932007,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCUDA::test_KLDivLoss_batch_mean_cuda",
            "lineno": 90,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009573090001140372,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007133047000024817,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004601749999437743,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/kldivloss_test.py::TestNNCUDA::test_KLDivLoss_batch_mean_log_target_cuda",
            "lineno": 105,
            "outcome": "passed",
            "setup": {
                "duration": 0.000261636000004728,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004375699999854987,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00038535199996658775,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCPU::test_to_cpu",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0036667479998868657,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0031051010000737733,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00022376900005838252,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/linear_test.py::TestNNCUDA::test_to_cuda",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0006499930000245513,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0023567260000163515,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001064693999978772,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_float32",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030721000007361,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.021779738999839537,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0012135250001392706,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_float64",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002947990001302969,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013639152999985527,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005010340000808355,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int16",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.000264106000031461,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03467587399995864,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007548039998255263,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int32",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002624549999836745,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03239839100001518,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007693059999382967,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int64",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002465869999923598,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.033005687000013495,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007368349999978818,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_int8",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002913190000981558,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03340880699988702,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007589239999106212,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCPU::test_log1p_cpu_uint8",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026866500002142857,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03305246100012482,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008994699999220757,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_float32",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010437299999921379,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.031537177000018346,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001043084999992061,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_float64",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003091460000632651,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.015318974000138041,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009892000000490953,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int16",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003833380001196929,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.040730131999907826,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011889360000623128,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int32",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003952770000523742,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03981411100016885,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010362829998484813,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int64",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.00039215800006786594,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.038219718000163994,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010686450000321202,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_int8",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.00037538200012932066,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03844222499992611,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0012549999999009742,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/log1p_test.py::TestSparseCUDA::test_log1p_cuda_uint8",
            "lineno": 84,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003980370001954725,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03898047799998494,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0012881930001640285,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCPU::test_det_logdet_slogdet_batched_cpu_float64",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004386049999993702,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.057362428000033105,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010335900001336995,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCPU::test_det_logdet_slogdet_cpu_float64",
            "lineno": 68,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003386920000139071,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.63858645099981,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007985379997990094,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCUDA::test_det_logdet_slogdet_batched_cuda_float64",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010571959999197134,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.8337419329998284,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0013888760001918854,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/logdet_test.py::TestLinalgCUDA::test_det_logdet_slogdet_cuda_float64",
            "lineno": 68,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00039867000009508047,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012430420001692255,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/logdet_test.py', 69, \"Skipped: There's a bug in cuSOLVER < 11.3\")"
            },
            "teardown": {
                "duration": 0.0005994509999709408,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCPU::test_lstmcell_backward_only_one_output_grad_cpu_float64",
            "lineno": 161,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003826520000984601,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009350570001060987,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/lstmcell_test.py', 162, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000770870999986073,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNDeviceTypeCUDA::test_lstmcell_backward_only_one_output_grad_cuda_float64",
            "lineno": 161,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010520960001940693,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007810048000010283,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007678070001020387,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_LSTM_cell_cpu",
            "lineno": 120,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029158899997128174,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007968852999965748,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007406300001093769,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_LSTM_cell_forward_hidden_size_cpu",
            "lineno": 146,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029241700008242333,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008576907999895411,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004794879998826218,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_LSTM_cell_forward_input_size_cpu",
            "lineno": 136,
            "outcome": "passed",
            "setup": {
                "duration": 0.000251873000024716,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0041635790000782436,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008088550000593386,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCPU::test_RNN_cell_no_broadcasting_cpu",
            "lineno": 91,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003043720000732719,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.020681211999999505,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006838009999228234,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_LSTM_cell_cuda",
            "lineno": 120,
            "outcome": "passed",
            "setup": {
                "duration": 0.00107205399990562,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005296084000065093,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007290450000709825,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_LSTM_cell_forward_hidden_size_cuda",
            "lineno": 146,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002890079999815498,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008042715000101452,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000795067999888488,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_LSTM_cell_forward_input_size_cuda",
            "lineno": 136,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002764440000646573,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005065236000064033,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001312567000013587,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lstmcell_test.py::TestNNCUDA::test_RNN_cell_no_broadcasting_cuda",
            "lineno": 91,
            "outcome": "passed",
            "setup": {
                "duration": 0.000301880000051824,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02237900700015416,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009444439999697352,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCPU::test_lt_cpu",
            "lineno": 46,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036200899990035396,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012600059999385849,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005771710000317398,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCPU::test_lt_scalar_cpu",
            "lineno": 61,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002621040000576613,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001275184999940393,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006172379999043187,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCUDA::test_lt_cuda",
            "lineno": 46,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009563149999394227,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002263464999941789,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009023850000176026,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/lt_test.py::TestNLLLossCUDA::test_lt_scalar_cuda",
            "lineno": 61,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003011329999935697,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0030512840000938013,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009362470000269241,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_complex128",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003147870002067066,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0470775329999924,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008567930001390778,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_complex64",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031106699998417753,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.026502316999994946,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006965059999402001,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_float32",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002626039999995555,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.030630966999979137,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006473460000506748,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_cpu_float64",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002784929999961605,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.021558808000008867,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007499610001104884,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_atol_rtol_cpu_float64",
            "lineno": 138,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002695340001537261,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0025889119999646937,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007464180000624765,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_complex128",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002691390000109095,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0027405629998611403,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005313260001003073,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_complex64",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002528800000618503,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001593242999888389,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005669160000252305,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_float32",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026995600001100684,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015311309998651268,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005393420001382765,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_basic_cpu_float64",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002871260001029441,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015495380000629666,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005173920001197985,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_complex128",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002604370001790812,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.022451035000131014,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005249539999567787,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_complex64",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002602819999992789,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.019921078000152193,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007530909999786672,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_float32",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002515019998554635,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.021697885000094175,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005163199998605705,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_cpu_float64",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028565899992827326,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.014080464000016946,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006948239999928774,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_complex128",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024151999991772755,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01057063999996899,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005441219998374436,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_complex64",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027476900004330673,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011225431999946522,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007292759999018017,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_float32",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024360800011891115,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010469412000020384,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007723749999968277,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_empty_cpu_float64",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027199000010114105,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011675467000031858,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005440049999378971,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_complex128",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026978599998983555,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0077872340000340046,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000734232000013435,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_complex64",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002660570000898588,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0065305140001328255,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008032000000639528,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_float32",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002891040001031797,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006443023999963771,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001752454000097714,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCPU::test_matrix_rank_out_errors_and_warnings_cpu_float64",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025353000000905013,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006351842999947621,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006980150001254515,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_complex128",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010735809999005141,
                "outcome": "passed"
            },
            "call": {
                "duration": 1.2489300009999624,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001343786999996155,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_complex64",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.00037806099999215803,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.14595517799989466,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011238409999805299,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_float32",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036516999989544274,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.12757570700000542,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0017304360001162422,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_cuda_float64",
            "lineno": 107,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003698939999594586,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.32517129699999714,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009819120000429393,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_atol_rtol_cuda_float64",
            "lineno": 138,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036777699983758794,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.017390554000030534,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006305970000539673,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_complex128",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003444559999934427,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007068522000054145,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006378850000601233,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_complex64",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033063099999708356,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004065547999971386,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007984369999576302,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_float32",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030121500003588153,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0033766100000320876,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006835699998646305,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_basic_cuda_float64",
            "lineno": 247,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003072169999995822,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003364832999977807,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006443039999339817,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_complex128",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.000276627999937773,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.3344983659999343,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0014156489999095356,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_complex64",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.00038308199987113767,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0554245069999979,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008999789999961649,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_float32",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033286099983342865,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0425814850000279,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009076750000076572,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_cuda_float64",
            "lineno": 47,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033242199992855603,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.10723374999997759,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007990849999259808,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_complex128",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034828600018954603,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.025284265999971467,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0017814550001276075,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_complex64",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030275100016297074,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.025273492999986047,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008415470001637004,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_float32",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002991870001096686,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.025050560999943627,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000926818999914758,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_empty_cuda_float64",
            "lineno": 168,
            "outcome": "passed",
            "setup": {
                "duration": 0.00030939999987822375,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.025172550999968735,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007005590000517259,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_complex128",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034048399993480416,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.009205546999965009,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0016137669999807258,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_complex64",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029157999983908667,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008890990000054444,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008414520000314951,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_float32",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034435199995641597,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007714364000094065,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009131530000558996,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/matrix_rank_test.py::TestLinalgCUDA::test_matrix_rank_out_errors_and_warnings_cuda_float64",
            "lineno": 219,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003412370001569798,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008070495999845662,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010917609999978595,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_cpu_complex128",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.000367288000006738,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.06580199600011838,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009668039999723987,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_cpu_float32",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036384199984240695,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05724769399989782,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009678829999302252,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_cpu_int64",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003893089999564836,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02574445100003686,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009055170000920043,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_invalid_cpu_complex128",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034020600014628144,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.053368437000017366,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009878330001811264,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_invalid_cpu_float32",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003651229999377392,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05010382299997218,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000724640000044019,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCPU::test_movedim_invalid_cpu_int64",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003233060001548438,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05074998599980063,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011086800000157382,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_cuda_complex128",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009631710001940519,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08286031800003002,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0013116529999024351,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_cuda_float32",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003863259998979629,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07621994300006918,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009270099999412196,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_cuda_int64",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004265360000772489,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.043027946000165684,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008414510000420705,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_invalid_cuda_complex128",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003747450000446406,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0545898269999725,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011806479999449948,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_invalid_cuda_float32",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003950630000417732,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05363565500010736,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010945839999294549,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/moveaxis_test.py::TestShapeOpsCUDA::test_movedim_invalid_cuda_int64",
            "lineno": 59,
            "outcome": "passed",
            "setup": {
                "duration": 0.00038375099984477856,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.053779519000045184,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001260760000150185,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCPU::test_multinomial_log_prob_with_logits_cpu",
            "lineno": 191,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004389130001527519,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006505850999928953,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008111390000067331,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestNumericalStabilityCUDA::test_multinomial_log_prob_with_logits_cuda",
            "lineno": 191,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010449090000292927,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.017498503999831883,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010172800000418647,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU::test_multinomial_1d_cpu",
            "lineno": 104,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003421279998292448,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.017806399000164674,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008252469999661116,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU::test_multinomial_1d_log_prob_and_entropy_cpu",
            "lineno": 122,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003256400000282156,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013478869999971721,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007660740000119404,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCPU::test_multinomial_2d_cpu",
            "lineno": 144,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033103000009759853,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.012230456999986927,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008278029999928549,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA::test_multinomial_1d_cuda",
            "lineno": 104,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010519339998609212,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0338220819999151,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011717979998593364,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA::test_multinomial_1d_log_prob_and_entropy_cuda",
            "lineno": 122,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035370499995224236,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005254809000007299,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005027380000228732,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionsCUDA::test_multinomial_2d_cuda",
            "lineno": 144,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032449400009681995,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01344604599989907,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006649869999364455,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCPU::test_multinomial_shape_cpu",
            "lineno": 171,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029671300012523716,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0023144009999214177,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001402873999950316,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/multinomial_test.py::TestDistributionShapesCUDA::test_multinomial_shape_cuda",
            "lineno": 171,
            "outcome": "passed",
            "setup": {
                "duration": 0.000638864999928046,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005567082999959894,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008566559999962919,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_complex128",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003222699999696488,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.09376879699993879,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009842329998264177,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_complex64",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003501430001051631,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.09884590700016815,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006810099998801888,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_float32",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.000364408999985244,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08409713400010332,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000617643000168755,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_cpu_float64",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.000334867999981725,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08280967599989708,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006181859998832806,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_complex128",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003756470000553236,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03352635099986401,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007273709998116829,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_complex64",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003099099999417376,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03137226900003043,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007145260001379938,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_float32",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002965840001252218,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0306780420000905,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00050867200002358,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCPU::test_ormqr_errors_and_warnings_cpu_float64",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027542300017557864,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03100821399993947,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008552219999273802,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_complex128",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010691370000586176,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.16663534999997864,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0013022099999489,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_complex64",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003913109999302833,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.16900036499987436,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011848369999825081,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_float32",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036382400003276416,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.15085261800004446,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010737939999216906,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_cuda_float64",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035591899995779386,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.1430494030000773,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0017667069998879015,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_complex128",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.00034779299994625035,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03561075799984792,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008891130000847625,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_complex64",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003365810000559577,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03713464100019337,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008368019998670206,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_float32",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003334279999762657,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03695860800007722,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007478119998722832,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/ormqr_test.py::TestLinalgCUDA::test_ormqr_errors_and_warnings_cuda_float64",
            "lineno": 116,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032038800009104307,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03547727600016515,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010541770000145334,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCPU::test_randperm_cpu",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003893020000305114,
                "outcome": "passed"
            },
            "call": {
                "duration": 3.355061160000105,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007367210000666091,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCPU::test_randperm_device_compatibility_cpu",
            "lineno": 151,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003441759999986971,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010820439999861264,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/randperm_test.py', 152, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.0008143009999912465,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCUDA::test_randperm_cuda",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010478579999926296,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.15948069000000942,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.02041796899993642,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/randperm_test.py::TestRandomTensorCreationCUDA::test_randperm_device_compatibility_cuda",
            "lineno": 151,
            "outcome": "passed",
            "setup": {
                "duration": 0.00038341399999808345,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.2156475809999847,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.002810906000149771,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCPU::test_range_cpu",
            "lineno": 35,
            "outcome": "passed",
            "setup": {
                "duration": 0.00045820200011803536,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005480285999965417,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006410309999864694,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCPU::test_range_warning_cpu",
            "lineno": 71,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029954900014672603,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010107079999670532,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006993070001044543,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCUDA::test_range_cuda",
            "lineno": 35,
            "outcome": "passed",
            "setup": {
                "duration": 0.0011196409998319723,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00355090600010044,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008917879999899014,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/range_test.py::TestTensorCreationCUDA::test_range_warning_cuda",
            "lineno": 71,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026672500007407507,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019999190001271927,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008584100000916806,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_add_module_raises_error_if_attr_exists_cpu",
            "lineno": 153,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003468560000783327,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012227600000187522,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006811780001498846,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_buffer_raises_error_if_attr_exists_cpu",
            "lineno": 89,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024440699985461833,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008498559998315613,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000526569000157906,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_parameter_allows_overwriting_with_same_name_cpu",
            "lineno": 136,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002391059999808931,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0014328849999856175,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004956329999004083,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_parameter_raises_error_if_attr_exists_cpu",
            "lineno": 118,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025793400004658906,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001001440999971237,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007322740000290651,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCPU::test_register_parameter_raises_error_if_name_is_not_string_cpu",
            "lineno": 108,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002453699999023229,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00127421799993499,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006456830001297931,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_add_module_raises_error_if_attr_exists_cuda",
            "lineno": 153,
            "outcome": "passed",
            "setup": {
                "duration": 0.000931585999978779,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002000597000005655,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006340859999909298,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_buffer_raises_error_if_attr_exists_cuda",
            "lineno": 89,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032246000000668573,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001583097999855454,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007558039999366883,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_parameter_allows_overwriting_with_same_name_cuda",
            "lineno": 136,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027602600016507495,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0022535079999670415,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007121109999843611,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_parameter_raises_error_if_attr_exists_cuda",
            "lineno": 118,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025494900000921916,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015062390000366577,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005911830000968621,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/register_parameter_test.py::TestNNCUDA::test_register_parameter_raises_error_if_name_is_not_string_cuda",
            "lineno": 108,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028787200017177383,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002063950000092518,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007929710000098567,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestConstraints::test_params_constraints",
            "lineno": 364,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003166139999848383,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003473963000033109,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000725561000081143,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_argmax_relaxed_categorical_cpu",
            "lineno": 241,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032415600003332656,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.020748358999981065,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005620199999611941,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_mode_cpu",
            "lineno": 323,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031028500006868853,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019393559998661658,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006954530001621606,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_relaxed_one_hot_categorical_1d_cpu",
            "lineno": 195,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003421769999931712,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.009298658000034266,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005144379999819648,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCPU::test_relaxed_one_hot_categorical_2d_cpu",
            "lineno": 216,
            "outcome": "failed",
            "setup": {
                "duration": 0.00029118999987076677,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.024375782000106483,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                    "lineno": 1280,
                    "message": "torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,\nnumerical:tensor(nan)\nanalytical:tensor(-2070291.8020)\n\nThe above quantities relating the numerical and analytical jacobians are computed \nin fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background \nabout fast mode. Below, we recompute numerical and analytical jacobians in slow mode:\n\nNumerical:\n tensor([[     nan,   0.0000],\n        [ -1.2075,   0.0000],\n        [-50.3831,   0.0000],\n        [  0.0000,      nan],\n        [  0.0000,  -1.2435],\n        [  0.0000,      nan]])\nAnalytical:\ntensor([[-2.1973e+04, -0.0000e+00],\n        [-1.2075e+00, -0.0000e+00],\n        [-5.0342e+01, -0.0000e+00],\n        [-0.0000e+00, -7.4596e+06],\n        [-0.0000e+00, -1.2435e+00],\n        [-0.0000e+00, -3.2092e+05]])\n\nThe max per-element difference (slow mode) is: nan."
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
                        "lineno": 239,
                        "message": ""
                    },
                    {
                        "path": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
                        "lineno": 194,
                        "message": "in _gradcheck_log_prob"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py",
                        "lineno": 3019,
                        "message": "in gradcheck"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1414,
                        "message": "in gradcheck"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1428,
                        "message": "in _gradcheck_helper"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1075,
                        "message": "in _gradcheck_real_imag"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1307,
                        "message": "in _fast_gradcheck"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1280,
                        "message": "GradcheckError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.relaxedonehotcategorical_test.TestDistributionsCPU testMethod=test_relaxed_one_hot_categorical_2d_cpu>, device = 'cpu'\n\n    def test_relaxed_one_hot_categorical_2d(self, device):\n        torch.set_default_dtype(torch.float64)\n        probabilities = [[0.1, 0.2, 0.3], [0.5, 0.3, 0.2]]\n        probabilities_1 = [[1.0, 0.0], [0.0, 1.0]]\n        temp = torch.tensor([3.0], requires_grad=True, device=device)\n        # The lower the temperature, the more unstable the log_prob gradcheck is\n        # w.r.t. the sample. Values below 0.25 empirically fail the default tol.\n        temp_2 = torch.tensor([0.25], requires_grad=True, device=device)\n        p = torch.tensor(probabilities, requires_grad=True, device=device)\n        s = torch.tensor(probabilities_1, requires_grad=True, device=device)\n        with pytorch_op_timer():\n            result = RelaxedOneHotCategorical(temp, p)\n        self.assertEqual(result.sample().size(), (2, 3))\n        with pytorch_op_timer():\n            result = RelaxedOneHotCategorical(temp, p)\n        self.assertEqual(result.sample(\n            sample_shape=(3, 4)).size(), (3, 4, 2, 3))\n        with pytorch_op_timer():\n            RelaxedOneHotCategorical(temp, p)\n        self.assertEqual(result.sample((6,)).size(), (6, 2, 3))\n        self._gradcheck_log_prob(lambda t, p: RelaxedOneHotCategorical(\n            t, p, validate_args=False), (temp, p))\n>       self._gradcheck_log_prob(lambda t, p: RelaxedOneHotCategorical(\n            t, p, validate_args=False), (temp_2, p))\n\nsrc/pytorch_tests_reduced/relaxedonehotcategorical_test.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/pytorch_tests_reduced/relaxedonehotcategorical_test.py:194: in _gradcheck_log_prob\n    gradcheck(apply_fn, (s,) + tuple(ctor_params), raise_exception=True)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py:3019: in gradcheck\n    return torch.autograd.gradcheck(fn, inputs, **kwargs)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1414: in gradcheck\n    return _gradcheck_helper(**args)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1428: in _gradcheck_helper\n    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1075: in _gradcheck_real_imag\n    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1307: in _fast_gradcheck\n    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nall_analytical = [[tensor(-2070291.8020, dtype=torch.float64), tensor(-5.7095, dtype=torch.float64), tensor(-2.5816, dtype=torch.float64)]]\nall_numerical = [[tensor(nan, dtype=torch.float64)], [tensor(-5.7095, dtype=torch.float64)], [tensor(-2.5816, dtype=torch.float64)]], complex_indices = None\ntupled_inputs = (tensor([[3.7779e-05, 9.8038e-01, 1.9587e-02],\n        [8.1294e-08, 1.0000e+00, 3.5838e-06]], dtype=torch.float64,\n   ...d=True), tensor([[0.1000, 0.2000, 0.3000],\n        [0.5000, 0.3000, 0.2000]], dtype=torch.float64, requires_grad=True))\noutputs = (tensor([ 8.0047, 19.8708], dtype=torch.float64, grad_fn=<AddBackward0>),)\nfunc = <function TestDistributions._gradcheck_log_prob.<locals>.apply_fn at 0x7fbd2cc0d7e0>, all_v = [tensor([0.7780, 0.6282], dtype=torch.float64)]\nall_u = [tensor([0.1010, 0.4981, 0.2168, 0.4202, 0.5237, 0.4938], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.6284, 0.4815, 0.5140, 0.3286, 0.0145, 0.0308], dtype=torch.float64)]\nrtol = 0.001, atol = 1e-05, test_imag = False\n\n    def _check_analytical_numerical_equal(all_analytical, all_numerical, complex_indices, tupled_inputs, outputs,\n                                          func, all_v, all_u, rtol, atol, test_imag, *, is_forward_ad=False):\n        for i, all_numerical_for_input_i in enumerate(all_numerical):\n            for j, n in enumerate(all_numerical_for_input_i):\n                # Forward AD generates the transpose of what this function expects\n                if is_forward_ad:\n                    a = all_analytical[i][j]\n                else:\n                    a = all_analytical[j][i]\n                n = n.to(device=a.device)\n                updated_atol = _adjusted_atol(atol, all_u[i], all_v[j] if all_v else None)\n                if not _allclose_with_type_promotion(a, n.to(a.device), rtol, updated_atol):\n                    jacobians_str = _run_slow_mode_and_get_error(func, tupled_inputs, outputs, i, j, rtol, atol, is_forward_ad)\n>                   raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)\nE                   torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,\nE                   numerical:tensor(nan)\nE                   analytical:tensor(-2070291.8020)\nE                   \nE                   The above quantities relating the numerical and analytical jacobians are computed \nE                   in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background \nE                   about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:\nE                   \nE                   Numerical:\nE                    tensor([[     nan,   0.0000],\nE                           [ -1.2075,   0.0000],\nE                           [-50.3831,   0.0000],\nE                           [  0.0000,      nan],\nE                           [  0.0000,  -1.2435],\nE                           [  0.0000,      nan]])\nE                   Analytical:\nE                   tensor([[-2.1973e+04, -0.0000e+00],\nE                           [-1.2075e+00, -0.0000e+00],\nE                           [-5.0342e+01, -0.0000e+00],\nE                           [-0.0000e+00, -7.4596e+06],\nE                           [-0.0000e+00, -1.2435e+00],\nE                           [-0.0000e+00, -3.2092e+05]])\nE                   \nE                   The max per-element difference (slow mode) is: nan.\n\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1280: GradcheckError"
            },
            "teardown": {
                "duration": 0.0011147420000270358,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_argmax_relaxed_categorical_cuda",
            "lineno": 241,
            "outcome": "failed",
            "setup": {
                "duration": 0.0011418420001518825,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00837547099990843,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/_tensor.py",
                    "lineno": 759,
                    "message": "TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first."
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
                        "lineno": 268,
                        "message": ""
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/scipy/stats/_multivariate.py",
                        "lineno": 3131,
                        "message": "in __call__"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/scipy/stats/_multivariate.py",
                        "lineno": 3368,
                        "message": "in __init__"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/scipy/stats/_multivariate.py",
                        "lineno": 3139,
                        "message": "in _process_parameters"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/_tensor.py",
                        "lineno": 759,
                        "message": "TypeError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.relaxedonehotcategorical_test.TestDistributionsCUDA testMethod=test_argmax_relaxed_categorical_cuda>, device = 'cuda:0'\n\n    @unittest.skipIf(not TEST_NUMPY, \"Numpy not found\")\n    def test_argmax_relaxed_categorical(self, device):\n        set_rng_seed(0)  # see Note [Randomized statistical tests]\n    \n        torch.set_default_dtype(torch.double)\n        class ArgMax(object):\n            def __init__(self, dist):\n                self.dist = dist\n    \n            def sample(self, *args, **kwargs):\n                s = self.dist.sample(*args, **kwargs)\n                _, idx = torch.max(s, -1)\n                return idx\n    \n        class ScipyCategorical(object):\n            def __init__(self, dist):\n                self.dist = dist\n    \n            def pmf(self, samples):\n                new_samples = np.zeros(samples.shape + self.dist.p.shape)\n                new_samples[np.arange(samples.shape[0]), samples] = 1\n                return self.dist.pmf(new_samples)\n    \n        for probs, temp in product([torch.tensor([0.1, 0.9], device=device), torch.tensor([0.2, 0.2, 0.6], device=device)], [0.1, 1.0, 10.0]):\n            self._check_sampler_discrete(ArgMax(RelaxedOneHotCategorical(temp, probs)),\n                                         ScipyCategorical(\n>                                            scipy.stats.multinomial(1, probs)),\n                                         'Rounded(RelaxedOneHotCategorical(temp={}, probs={}))'.format(\n                                             temp, probs),\n                                         failure_rate=1e-3)\n\nsrc/pytorch_tests_reduced/relaxedonehotcategorical_test.py:268: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/scipy/stats/_multivariate.py:3131: in __call__\n    return multinomial_frozen(n, p, seed)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/scipy/stats/_multivariate.py:3368: in __init__\n    self.n, self.p, self.npcond = self._dist._process_parameters(n, p)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/scipy/stats/_multivariate.py:3139: in _process_parameters\n    p = np.array(p, dtype=np.float64, copy=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = tensor([0.1000, 0.9000], device='cuda:0', dtype=torch.float64), dtype = dtype('float64')\n\n    def __array__(self, dtype=None):\n        if has_torch_function_unary(self):\n            return handle_torch_function(Tensor.__array__, (self,), self, dtype=dtype)\n        if dtype is None:\n            return self.numpy()\n        else:\n>           return self.numpy().astype(dtype, copy=False)\nE           TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.\n\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/_tensor.py:759: TypeError"
            },
            "teardown": {
                "duration": 0.0012633169999389793,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_mode_cuda",
            "lineno": 323,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003828270000667544,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.06881875700014461,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006413469998278742,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_relaxed_one_hot_categorical_1d_cuda",
            "lineno": 195,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003334969999286841,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02048170700004448,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0015274390000286076,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py::TestDistributionsCUDA::test_relaxed_one_hot_categorical_2d_cuda",
            "lineno": 216,
            "outcome": "failed",
            "setup": {
                "duration": 0.00030856699981995916,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05091018400003122,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                    "lineno": 1280,
                    "message": "torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,\nnumerical:tensor(nan, device='cuda:0')\nanalytical:tensor(-1143061.5447, device='cuda:0')\n\nThe above quantities relating the numerical and analytical jacobians are computed \nin fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background \nabout fast mode. Below, we recompute numerical and analytical jacobians in slow mode:\n\nNumerical:\n tensor([[    nan,  0.0000],\n        [    nan,  0.0000],\n        [-1.2161,  0.0000],\n        [ 0.0000, -1.2273],\n        [ 0.0000,     nan],\n        [ 0.0000,     nan]], device='cuda:0')\nAnalytical:\ntensor([[-3.9881e+06, -0.0000e+00],\n        [-1.7886e+03, -0.0000e+00],\n        [-1.2161e+00, -0.0000e+00],\n        [-0.0000e+00, -1.2273e+00],\n        [-0.0000e+00, -2.4840e+06],\n        [-0.0000e+00, -3.7861e+04]], device='cuda:0')\n\nThe max per-element difference (slow mode) is: nan."
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
                        "lineno": 239,
                        "message": ""
                    },
                    {
                        "path": "src/pytorch_tests_reduced/relaxedonehotcategorical_test.py",
                        "lineno": 194,
                        "message": "in _gradcheck_log_prob"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py",
                        "lineno": 3019,
                        "message": "in gradcheck"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1414,
                        "message": "in gradcheck"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1428,
                        "message": "in _gradcheck_helper"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1075,
                        "message": "in _gradcheck_real_imag"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1307,
                        "message": "in _fast_gradcheck"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py",
                        "lineno": 1280,
                        "message": "GradcheckError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.relaxedonehotcategorical_test.TestDistributionsCUDA testMethod=test_relaxed_one_hot_categorical_2d_cuda>, device = 'cuda:0'\n\n    def test_relaxed_one_hot_categorical_2d(self, device):\n        torch.set_default_dtype(torch.float64)\n        probabilities = [[0.1, 0.2, 0.3], [0.5, 0.3, 0.2]]\n        probabilities_1 = [[1.0, 0.0], [0.0, 1.0]]\n        temp = torch.tensor([3.0], requires_grad=True, device=device)\n        # The lower the temperature, the more unstable the log_prob gradcheck is\n        # w.r.t. the sample. Values below 0.25 empirically fail the default tol.\n        temp_2 = torch.tensor([0.25], requires_grad=True, device=device)\n        p = torch.tensor(probabilities, requires_grad=True, device=device)\n        s = torch.tensor(probabilities_1, requires_grad=True, device=device)\n        with pytorch_op_timer():\n            result = RelaxedOneHotCategorical(temp, p)\n        self.assertEqual(result.sample().size(), (2, 3))\n        with pytorch_op_timer():\n            result = RelaxedOneHotCategorical(temp, p)\n        self.assertEqual(result.sample(\n            sample_shape=(3, 4)).size(), (3, 4, 2, 3))\n        with pytorch_op_timer():\n            RelaxedOneHotCategorical(temp, p)\n        self.assertEqual(result.sample((6,)).size(), (6, 2, 3))\n        self._gradcheck_log_prob(lambda t, p: RelaxedOneHotCategorical(\n            t, p, validate_args=False), (temp, p))\n>       self._gradcheck_log_prob(lambda t, p: RelaxedOneHotCategorical(\n            t, p, validate_args=False), (temp_2, p))\n\nsrc/pytorch_tests_reduced/relaxedonehotcategorical_test.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/pytorch_tests_reduced/relaxedonehotcategorical_test.py:194: in _gradcheck_log_prob\n    gradcheck(apply_fn, (s,) + tuple(ctor_params), raise_exception=True)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py:3019: in gradcheck\n    return torch.autograd.gradcheck(fn, inputs, **kwargs)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1414: in gradcheck\n    return _gradcheck_helper(**args)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1428: in _gradcheck_helper\n    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1075: in _gradcheck_real_imag\n    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1307: in _fast_gradcheck\n    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nall_analytical = [[tensor(-1143061.5447, device='cuda:0', dtype=torch.float64), tensor(-11.9947, device='cuda:0', dtype=torch.float64), tensor(-3.9275, device='cuda:0', dtype=torch.float64)]]\nall_numerical = [[tensor(nan, device='cuda:0', dtype=torch.float64)], [tensor(-11.9947, device='cuda:0', dtype=torch.float64)], [tensor(-3.9275, device='cuda:0', dtype=torch.float64)]]\ncomplex_indices = None\ntupled_inputs = (tensor([[1.7086e-07, 6.1685e-04, 9.9938e-01],\n        [9.9997e-01, 2.6001e-07, 2.9763e-05]], device='cuda:0',\n       ..., 0.2000, 0.3000],\n        [0.5000, 0.3000, 0.2000]], device='cuda:0', dtype=torch.float64,\n       requires_grad=True))\noutputs = (tensor([15.9123, 17.9862], device='cuda:0', dtype=torch.float64,\n       grad_fn=<AddBackward0>),)\nfunc = <function TestDistributions._gradcheck_log_prob.<locals>.apply_fn at 0x7fbd2c659d80>, all_v = [tensor([0.7780, 0.6282], device='cuda:0', dtype=torch.float64)]\nall_u = [tensor([0.1010, 0.4981, 0.2168, 0.4202, 0.5237, 0.4938], device='cuda:0',\n       dtype=torch.float64), tensor([1.], d...=torch.float64), tensor([0.6284, 0.4815, 0.5140, 0.3286, 0.0145, 0.0308], device='cuda:0',\n       dtype=torch.float64)]\nrtol = 0.001, atol = 1e-05, test_imag = False\n\n    def _check_analytical_numerical_equal(all_analytical, all_numerical, complex_indices, tupled_inputs, outputs,\n                                          func, all_v, all_u, rtol, atol, test_imag, *, is_forward_ad=False):\n        for i, all_numerical_for_input_i in enumerate(all_numerical):\n            for j, n in enumerate(all_numerical_for_input_i):\n                # Forward AD generates the transpose of what this function expects\n                if is_forward_ad:\n                    a = all_analytical[i][j]\n                else:\n                    a = all_analytical[j][i]\n                n = n.to(device=a.device)\n                updated_atol = _adjusted_atol(atol, all_u[i], all_v[j] if all_v else None)\n                if not _allclose_with_type_promotion(a, n.to(a.device), rtol, updated_atol):\n                    jacobians_str = _run_slow_mode_and_get_error(func, tupled_inputs, outputs, i, j, rtol, atol, is_forward_ad)\n>                   raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)\nE                   torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,\nE                   numerical:tensor(nan, device='cuda:0')\nE                   analytical:tensor(-1143061.5447, device='cuda:0')\nE                   \nE                   The above quantities relating the numerical and analytical jacobians are computed \nE                   in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background \nE                   about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:\nE                   \nE                   Numerical:\nE                    tensor([[    nan,  0.0000],\nE                           [    nan,  0.0000],\nE                           [-1.2161,  0.0000],\nE                           [ 0.0000, -1.2273],\nE                           [ 0.0000,     nan],\nE                           [ 0.0000,     nan]], device='cuda:0')\nE                   Analytical:\nE                   tensor([[-3.9881e+06, -0.0000e+00],\nE                           [-1.7886e+03, -0.0000e+00],\nE                           [-1.2161e+00, -0.0000e+00],\nE                           [-0.0000e+00, -1.2273e+00],\nE                           [-0.0000e+00, -2.4840e+06],\nE                           [-0.0000e+00, -3.7861e+04]], device='cuda:0')\nE                   \nE                   The max per-element difference (slow mode) is: nan.\n\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/autograd/gradcheck.py:1280: GradcheckError"
            },
            "teardown": {
                "duration": 0.001313540999944962,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCPU::test_batchnorm_simple_average_cpu_bfloat16",
            "lineno": 120,
            "outcome": "passed",
            "setup": {
                "duration": 0.00041113999986919225,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005822738000006211,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000493935000122292,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCPU::test_batchnorm_simple_average_cpu_float32",
            "lineno": 120,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002867919999971491,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004116410000051474,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007430549999298819,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCUDA::test_batchnorm_simple_average_cuda_bfloat16",
            "lineno": 120,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009322599998995429,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07838294799989853,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010576360000413842,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/reset_running_stats_test.py::TestNNDeviceTypeCUDA::test_batchnorm_simple_average_cuda_float32",
            "lineno": 120,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003367890001300111,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008920935999867652,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007430409998505638,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCPU::test_rounding_cpu",
            "lineno": 65,
            "outcome": "passed",
            "setup": {
                "duration": 0.00033114200005002203,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001081859999885637,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005162800000562129,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/round_test.py::TestRoundCUDA::test_rounding_cuda",
            "lineno": 65,
            "outcome": "passed",
            "setup": {
                "duration": 0.0006184349999784899,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002291797999987466,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009693540000625944,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCPU::test_saddmm_cpu_complex128",
            "lineno": 108,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003211099999589351,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.46708283599991773,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010697129998789023,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCPU::test_saddmm_cpu_float64",
            "lineno": 108,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003639740000380698,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.20876980999992156,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010486359999504202,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCUDA::test_saddmm_cuda_complex128",
            "lineno": 108,
            "outcome": "failed",
            "setup": {
                "duration": 0.0008470210000268708,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013278307999826211,
                "outcome": "failed",
                "crash": {
                    "path": "/home/frasermince/portability/src/pytorch_tests_reduced/saddmm_test.py",
                    "lineno": 121,
                    "message": "RuntimeError: NYI: CUDA sspaddmm is not implemented"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/saddmm_test.py",
                        "lineno": 133,
                        "message": ""
                    },
                    {
                        "path": "src/pytorch_tests_reduced/saddmm_test.py",
                        "lineno": 121,
                        "message": "RuntimeError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.saddmm_test.TestSparseCUDA testMethod=test_saddmm_cuda_complex128>, device = 'cuda:0', dtype = torch.complex128, coalesced = True\n\n    @coalescedonoff\n    # @onlyAcceleratedDeviceTypes\n    @dtypes(torch.double, torch.cdouble)\n    def test_saddmm(self, device, dtype, coalesced):\n        def test_shape(di, dj, dk, nnz):\n            x = self._gen_sparse(2, nnz, [di, dj], dtype, device, coalesced)[0]\n            t = self._gen_sparse(2, nnz, [di, dk], dtype, device, coalesced)[0]\n            y = torch.randn(dj, dk, dtype=dtype, device=device)\n            alpha = random.random()\n            beta = random.random()\n    \n            with pytorch_op_timer():\n                res = torch.saddmm(t, x, y, beta=beta, alpha=alpha)\n            expected = torch.addmm(self.safeToDense(t), self.safeToDense(x), y, beta=beta, alpha=alpha)\n            self.assertEqual(self.safeToDense(res), expected)\n            with pytorch_op_timer():\n                res = torch.saddmm(t, x, y)\n            expected = torch.addmm(self.safeToDense(t), self.safeToDense(x), y)\n            self.assertEqual(self.safeToDense(res), expected)\n    \n            res = torch.smm(x, y)\n            expected = torch.mm(self.safeToDense(x), y)\n            self.assertEqual(self.safeToDense(res), expected)\n    \n>       test_shape(7, 5, 3, 20)\n\nsrc/pytorch_tests_reduced/saddmm_test.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndi = 7, dj = 5, dk = 3, nnz = 20\n\n    def test_shape(di, dj, dk, nnz):\n        x = self._gen_sparse(2, nnz, [di, dj], dtype, device, coalesced)[0]\n        t = self._gen_sparse(2, nnz, [di, dk], dtype, device, coalesced)[0]\n        y = torch.randn(dj, dk, dtype=dtype, device=device)\n        alpha = random.random()\n        beta = random.random()\n    \n        with pytorch_op_timer():\n>           res = torch.saddmm(t, x, y, beta=beta, alpha=alpha)\nE           RuntimeError: NYI: CUDA sspaddmm is not implemented\n\nsrc/pytorch_tests_reduced/saddmm_test.py:121: RuntimeError"
            },
            "teardown": {
                "duration": 0.0008414760000050592,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/saddmm_test.py::TestSparseCUDA::test_saddmm_cuda_float64",
            "lineno": 108,
            "outcome": "failed",
            "setup": {
                "duration": 0.0003239760001179093,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07867992799992862,
                "outcome": "failed",
                "crash": {
                    "path": "/home/frasermince/portability/src/pytorch_tests_reduced/saddmm_test.py",
                    "lineno": 121,
                    "message": "RuntimeError: NYI: CUDA sspaddmm is not implemented"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/saddmm_test.py",
                        "lineno": 133,
                        "message": ""
                    },
                    {
                        "path": "src/pytorch_tests_reduced/saddmm_test.py",
                        "lineno": 121,
                        "message": "RuntimeError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.saddmm_test.TestSparseCUDA testMethod=test_saddmm_cuda_float64>, device = 'cuda:0', dtype = torch.float64, coalesced = True\n\n    @coalescedonoff\n    # @onlyAcceleratedDeviceTypes\n    @dtypes(torch.double, torch.cdouble)\n    def test_saddmm(self, device, dtype, coalesced):\n        def test_shape(di, dj, dk, nnz):\n            x = self._gen_sparse(2, nnz, [di, dj], dtype, device, coalesced)[0]\n            t = self._gen_sparse(2, nnz, [di, dk], dtype, device, coalesced)[0]\n            y = torch.randn(dj, dk, dtype=dtype, device=device)\n            alpha = random.random()\n            beta = random.random()\n    \n            with pytorch_op_timer():\n                res = torch.saddmm(t, x, y, beta=beta, alpha=alpha)\n            expected = torch.addmm(self.safeToDense(t), self.safeToDense(x), y, beta=beta, alpha=alpha)\n            self.assertEqual(self.safeToDense(res), expected)\n            with pytorch_op_timer():\n                res = torch.saddmm(t, x, y)\n            expected = torch.addmm(self.safeToDense(t), self.safeToDense(x), y)\n            self.assertEqual(self.safeToDense(res), expected)\n    \n            res = torch.smm(x, y)\n            expected = torch.mm(self.safeToDense(x), y)\n            self.assertEqual(self.safeToDense(res), expected)\n    \n>       test_shape(7, 5, 3, 20)\n\nsrc/pytorch_tests_reduced/saddmm_test.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndi = 7, dj = 5, dk = 3, nnz = 20\n\n    def test_shape(di, dj, dk, nnz):\n        x = self._gen_sparse(2, nnz, [di, dj], dtype, device, coalesced)[0]\n        t = self._gen_sparse(2, nnz, [di, dk], dtype, device, coalesced)[0]\n        y = torch.randn(dj, dk, dtype=dtype, device=device)\n        alpha = random.random()\n        beta = random.random()\n    \n        with pytorch_op_timer():\n>           res = torch.saddmm(t, x, y, beta=beta, alpha=alpha)\nE           RuntimeError: NYI: CUDA sspaddmm is not implemented\n\nsrc/pytorch_tests_reduced/saddmm_test.py:121: RuntimeError"
            },
            "teardown": {
                "duration": 0.0010531689999879745,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_complex128",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.00040294900009030243,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008984739999959857,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004936769998948876,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_complex64",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002805499998430605,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.000932446999968306,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007032250000520435,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_float32",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024296199990203604,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008010680001007131,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004922080001961149,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_float64",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024185999996007013,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008333240000411024,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007030599999779952,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_int32",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002543530001730687,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008179429999017884,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005212739999933547,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCPU::test_mm_cpu_int64",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002594239999780257,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0017965419999654841,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005889219999062334,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_complex128",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009807259998524387,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0646348370000851,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008899399999791058,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_complex64",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.00036902000010741176,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002011016999858839,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007939550000628515,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_float32",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031281300016416935,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015629019999323646,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005457359998217726,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/size_test.py::TestLinalgCUDA::test_mm_cuda_float64",
            "lineno": 43,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002983520000725548,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0013336220001747279,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006078659998820513,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU::test_nn_scalars_reductions_cpu",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00035099599995191966,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005508225000085076,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00048123300007318903,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU::test_smooth_l1_loss_bfloat16_cpu",
            "lineno": 188,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025076699989767803,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.009686151000096288,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007047280000733736,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCPU::test_smooth_l1_loss_vs_huber_loss_cpu",
            "lineno": 114,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023705899980086542,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01423932100010461,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007610340001065197,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA::test_nn_scalars_reductions_cuda",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009795670000585233,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01474111300012737,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007547660000000178,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA::test_smooth_l1_loss_bfloat16_cuda",
            "lineno": 188,
            "outcome": "failed",
            "setup": {
                "duration": 0.00035857799980476557,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011758257000110461,
                "outcome": "failed",
                "crash": {
                    "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/functional.py",
                    "lineno": 3188,
                    "message": "RuntimeError: \"smooth_l1_cuda\" not implemented for 'BFloat16'"
                },
                "traceback": [
                    {
                        "path": "src/pytorch_tests_reduced/smoothl1loss_test.py",
                        "lineno": 213,
                        "message": ""
                    },
                    {
                        "path": "src/pytorch_tests_reduced/smoothl1loss_test.py",
                        "lineno": 196,
                        "message": "in test_dtype"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/module.py",
                        "lineno": 1130,
                        "message": "in _call_impl"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/loss.py",
                        "lineno": 922,
                        "message": "in forward"
                    },
                    {
                        "path": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/functional.py",
                        "lineno": 3188,
                        "message": "RuntimeError"
                    }
                ],
                "longrepr": "self = <src.pytorch_tests_reduced.smoothl1loss_test.TestNNDeviceTypeCUDA testMethod=test_smooth_l1_loss_bfloat16_cuda>, device = 'cuda:0'\n\n    def test_smooth_l1_loss_bfloat16(self, device):\n        torch.set_default_dtype(torch.double)\n        def test_dtype(fn, input, target, dtype):\n            input = input.detach().clone().to(dtype=dtype).requires_grad_(True)\n            input2 = input.detach().clone().float().requires_grad_(True)\n            target = target.detach().clone().to(dtype=dtype)\n            target2 = target.detach().clone().float()\n            out = fn(input, target)\n            out.sum().backward()\n            out2 = fn(input2, target2)\n            out2.sum().backward()\n            self.assertEqual(out.dtype, dtype)\n            self.assertEqual(input.grad.dtype, dtype)\n            self.assertEqual(out, out2, exact_dtype=False)\n            self.assertEqual(input.grad, input2.grad, exact_dtype=False)\n    \n        def func(device):\n            with pytorch_op_timer():\n                return nn.SmoothL1Loss().to(device=device)\n    \n        shapes = [[1, 3, 1, 6], [1, 3, 1, 128], [1, 3, 128, 128]]\n        for shape in shapes:\n            x = torch.randn(shape, device=device, requires_grad=True)\n            t = torch.randn(shape, device=device)\n>           test_dtype(func(device), x, t, torch.bfloat16)\n\nsrc/pytorch_tests_reduced/smoothl1loss_test.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/pytorch_tests_reduced/smoothl1loss_test.py:196: in test_dtype\n    out = fn(input, target)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/module.py:1130: in _call_impl\n    return forward_call(*input, **kwargs)\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/loss.py:922: in forward\n    return F.smooth_l1_loss(input, target, reduction=self.reduction, beta=self.beta)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ninput = tensor([[[[-0.5391,  0.5430,  0.3984,  0.4316, -0.2715, -0.8125]],\n\n         [[-0.5898,  1.3594,  0.9766,  0.2988,  0....516,  0.8008,  1.3359,  1.1875, -0.9531,  0.5391]]]],\n       device='cuda:0', dtype=torch.bfloat16, requires_grad=True)\ntarget = tensor([[[[ 1.0078, -0.2324,  0.2734, -2.2188, -0.4023,  0.5312]],\n\n         [[ 0.2520,  0.3730,  0.8086, -0.6250,  1....]],\n\n         [[-1.1016, -0.9023,  2.4062,  0.3223, -1.6172,  0.7227]]]],\n       device='cuda:0', dtype=torch.bfloat16)\nsize_average = None, reduce = None, reduction = 'mean', beta = 1.0\n\n    def smooth_l1_loss(\n        input: Tensor,\n        target: Tensor,\n        size_average: Optional[bool] = None,\n        reduce: Optional[bool] = None,\n        reduction: str = \"mean\",\n        beta: float = 1.0,\n    ) -> Tensor:\n        r\"\"\"Function that uses a squared term if the absolute\n        element-wise error falls below beta and an L1 term otherwise.\n    \n        See :class:`~torch.nn.SmoothL1Loss` for details.\n        \"\"\"\n        if has_torch_function_variadic(input, target):\n            return handle_torch_function(\n                smooth_l1_loss,\n                (input, target),\n                input,\n                target,\n                size_average=size_average,\n                reduce=reduce,\n                reduction=reduction,\n                beta=beta,\n            )\n        if not (target.size() == input.size()):\n            warnings.warn(\n                \"Using a target size ({}) that is different to the input size ({}). \"\n                \"This will likely lead to incorrect results due to broadcasting. \"\n                \"Please ensure they have the same size.\".format(target.size(), input.size()),\n                stacklevel=2,\n            )\n        if size_average is not None or reduce is not None:\n            reduction = _Reduction.legacy_get_string(size_average, reduce)\n    \n        expanded_input, expanded_target = torch.broadcast_tensors(input, target)\n>       return torch._C._nn.smooth_l1_loss(expanded_input, expanded_target, _Reduction.get_enum(reduction), beta)\nE       RuntimeError: \"smooth_l1_cuda\" not implemented for 'BFloat16'\n\n/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/functional.py:3188: RuntimeError"
            },
            "teardown": {
                "duration": 0.0010958259999824804,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/smoothl1loss_test.py::TestNNDeviceTypeCUDA::test_smooth_l1_loss_vs_huber_loss_cuda",
            "lineno": 114,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003335840001454926,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08405069500008722,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010983269999087497,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCPU::test_state_dict_cpu",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.00040698299994801346,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002744271999972625,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005599989999609534,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestNNCUDA::test_state_dict_cuda",
            "lineno": 88,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008877430000211461,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0032164360000024317,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0019553340000584285,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_module_pre_hook_cpu",
            "lineno": 195,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002870809998967161,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00147254399985286,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007310850000976643,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_post_hook_backward_compatibility_cpu",
            "lineno": 329,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002601870000944473,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.013592789000085759,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007387359999029286,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_post_hook_cpu",
            "lineno": 264,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002656010001373943,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002075202000014542,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006946159999188239,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCPU::test_load_state_dict_pre_hook_cpu",
            "lineno": 162,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023481099992750387,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0023384150001675152,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006818599999860453,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_module_pre_hook_cuda",
            "lineno": 195,
            "outcome": "passed",
            "setup": {
                "duration": 0.0006576499999937369,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0638834300000326,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00095956300015132,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_post_hook_backward_compatibility_cuda",
            "lineno": 329,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003612970001540816,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0046953080000093905,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007387450000351237,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_post_hook_cuda",
            "lineno": 264,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028642200004469487,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002936553000154163,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009506100000180595,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/state_dict_test.py::TestStateDictHooksCUDA::test_load_state_dict_pre_hook_cuda",
            "lineno": 162,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002931520000402088,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.05864314099994772,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006762389998584695,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCPU::test_sum_cpu",
            "lineno": 32,
            "outcome": "passed",
            "setup": {
                "duration": 0.00038207500006137707,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009693770000467339,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005896469999697729,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/sum_test.py::TestSumCUDA::test_sum_cuda",
            "lineno": 32,
            "outcome": "passed",
            "setup": {
                "duration": 0.0011362969999026973,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019959799999469396,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009639830000196525,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/synchronize_test.py::TestCuda::test_copy_streams",
            "lineno": 117,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003070909999678406,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.26057230400010667,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0015434029999141785,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCPU::test_tensor_set_cpu",
            "lineno": 66,
            "outcome": "passed",
            "setup": {
                "duration": 0.00047647499991398945,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002905383999859623,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008226049999393581,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/tensor_test.py::TestTorchCUDA::test_tensor_set_cuda",
            "lineno": 66,
            "outcome": "passed",
            "setup": {
                "duration": 0.0012451019999843993,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0032576169999174454,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010212969998519839,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCPU::test_to_cpu_float32",
            "lineno": 75,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003608090000852826,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002195512000071176,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0015569439999580936,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/to_test.py::TestNNCUDA::test_to_cuda_float32",
            "lineno": 75,
            "outcome": "passed",
            "setup": {
                "duration": 0.000695606999897791,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0028683979999186704,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010025750000295375,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_complex128",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003111480000370648,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.021401878000006036,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007844970000405738,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_complex64",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024962699990283,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.020403024999950503,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000532048000195573,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_float32",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025723099997776444,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.01680018799993377,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004928719999952591,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCPU::test_triangular_solve_cpu_float64",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024577599992881005,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0149668379999639,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009670609999830049,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_complex128",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.0010064589998819429,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.022645232000058968,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006228489999102749,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_complex64",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002673320000212698,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.020513161000053515,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006835120000232564,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_float32",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027204000002711837,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.020085861000097793,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006453189998865128,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/triangular_solve_test.py::TestLinalgCUDA::test_triangular_solve_cuda_float64",
            "lineno": 81,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028426500011846656,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0197762339998917,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009390800000801391,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCPU::test_unbind_cpu",
            "lineno": 31,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003465859999778331,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008704200000011042,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008078020000539254,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unbind_test.py::TestViewOpsCUDA::test_unbind_cuda",
            "lineno": 31,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008458329998575209,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.011927504999903249,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008949599998686608,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCPU::test_unsqueeze_view_cpu",
            "lineno": 40,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003212039998743421,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009195940001518466,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000546641000028103,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/unsqueeze_test.py::TestViewOpsCUDA::test_unsqueeze_view_cuda",
            "lineno": 40,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009727990000101272,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002231664999953864,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0012368800000785996,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_indexing_cpu",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003417220000301313,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.018977814999971088,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005266790001314803,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_indexing_duplicates_cpu",
            "lineno": 151,
            "outcome": "passed",
            "setup": {
                "duration": 0.00029054199990241614,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0026555809999990743,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004800909998721181,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_inplace_cpu",
            "lineno": 198,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026235800009999366,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.02659372399989479,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000660949999883087,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_pyscalar_conversions_cpu",
            "lineno": 345,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002486739999767451,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0024390020000737422,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005433119999906921,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_reentrant_priority_cpu",
            "lineno": 400,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023925699997562333,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004264720000037414,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000735059000135152,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_simple_reentrant_cpu",
            "lineno": 319,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023341400014942337,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001149675000078787,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00116577599987977,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCPU::test_type_conversions_cpu",
            "lineno": 263,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00023444999987987103,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0007939899999200861,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/variable_test.py', 264, \"Skipped: onlyAcceleratedDeviceTypes: doesn't run on cpu\")"
            },
            "teardown": {
                "duration": 0.000573269000142318,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_indexing_cuda",
            "lineno": 67,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008596999998644606,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.03024615399999675,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0009905309998430312,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_indexing_duplicates_cuda",
            "lineno": 151,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002792620000491297,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0052194410000083735,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008894310001323902,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_inplace_cuda",
            "lineno": 198,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002904830000716174,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.019061633000092115,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007947830001739931,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_pyscalar_conversions_cuda",
            "lineno": 345,
            "outcome": "passed",
            "setup": {
                "duration": 0.00028123099991717027,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00336188400001447,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0010130780001418316,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_reentrant_priority_cuda",
            "lineno": 400,
            "outcome": "passed",
            "setup": {
                "duration": 0.00032583799998064933,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.003933270000061384,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000890769000079672,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_simple_reentrant_cuda",
            "lineno": 319,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025518500001453504,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.07113681800001359,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000603741000077207,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/variable_test.py::TestAutogradCUDA::test_type_conversions_cuda",
            "lineno": 263,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003934100000151375,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.010308783000027688,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007228009999380447,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCPU::test_vonmises_shape_scalar_params_cpu",
            "lineno": 109,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003682919998482248,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.005127735000087341,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0033719580001161376,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCPU::test_vonmises_shape_tensor_params_cpu",
            "lineno": 99,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025257499987674237,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0029567169999609177,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005568300000504678,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCUDA::test_vonmises_shape_scalar_params_cuda",
            "lineno": 109,
            "outcome": "passed",
            "setup": {
                "duration": 0.0008628919999864593,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002801795000095808,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006061080000563379,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/vonmises_test.py::TestDistributionShapesCUDA::test_vonmises_shape_tensor_params_cuda",
            "lineno": 99,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002604010001050483,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.008773226999892358,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008151669999278965,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCPU::test_xavier_uniform_cpu",
            "lineno": 111,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003042580001419992,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0944044269999722,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0003452260000358365,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCPU::test_xavier_uniform_errors_on_inputs_smaller_than_2d_cpu",
            "lineno": 100,
            "outcome": "passed",
            "setup": {
                "duration": 0.0007855779999772494,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0033618420000038896,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006303000000116299,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCUDA::test_xavier_uniform_cuda",
            "lineno": 111,
            "outcome": "passed",
            "setup": {
                "duration": 0.001744057999985671,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.10853712499988433,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.001938152999855447,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/xavier_uniform_test.py::TestNNInitCUDA::test_xavier_uniform_errors_on_inputs_smaller_than_2d_cuda",
            "lineno": 100,
            "outcome": "passed",
            "setup": {
                "duration": 0.0004552570001123968,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0017670800000360032,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007123000000319735,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCPU::test_zero_grad_cpu",
            "lineno": 91,
            "outcome": "passed",
            "setup": {
                "duration": 0.0003904059999513265,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004582304999985354,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005561339999076154,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zero_grad_test.py::TestNNCUDA::test_zero_grad_cuda",
            "lineno": 91,
            "outcome": "passed",
            "setup": {
                "duration": 0.0009440469998480694,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.004760263999969538,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008498830000007729,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_cpu",
            "lineno": 97,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031998399981603143,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.002898765000054482,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007445969999935187,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_bool",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025588900007278426,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.000751864999983809,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005271999998512911,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_complex64",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027028199997403135,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012406160001319222,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007540470001003996,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_float16",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002471840000453085,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009051209999597631,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0004934139999477338,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_float32",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023552499987999909,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.000872782999977062,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005311609997988853,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_int16",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023427800010722422,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009574570001404936,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0011763589998281532,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_int64",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00024182000015571248,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0009442990001389262,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007320520001030673,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_dtype_layout_device_match_cpu_uint8",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00023077500009094365,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0010462570000981941,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006242590000056225,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCPU::test_zeros_out_cpu",
            "lineno": 134,
            "outcome": "passed",
            "setup": {
                "duration": 0.00022750700009055436,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007036654999865277,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005731789999572356,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_cuda",
            "lineno": 97,
            "outcome": "passed",
            "setup": {
                "duration": 0.000834246000067651,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00411433199997191,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008806170001207647,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_bool",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025866400005725154,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001809164999940549,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006495380000615114,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_complex64",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00031128599994190154,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001636532000020452,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007560460001059255,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_float16",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002752409998265648,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0021800309998525336,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0008618869999281742,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_float32",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00027447399997981847,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0015573489999951562,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000579977999905168,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_int16",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.00026504199990995403,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019115229999897565,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007678530000703176,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_int64",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002683109998997679,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0017919179999807966,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005918419999488833,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_dtype_layout_device_match_cuda_uint8",
            "lineno": 87,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002876739999919664,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0021530659998916235,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005965650000234746,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestTensorCreationCUDA::test_zeros_out_cuda",
            "lineno": 134,
            "outcome": "passed",
            "setup": {
                "duration": 0.00025368299998262955,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.006541361000017787,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007172670000272774,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCPU::test_zeros_like_cpu",
            "lineno": 175,
            "outcome": "passed",
            "setup": {
                "duration": 0.0002836820001448359,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0012087289999271889,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0005604640000456129,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCPU::test_zeros_like_multiple_device_cpu",
            "lineno": 182,
            "outcome": "skipped",
            "setup": {
                "duration": 0.00024205399995480548,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0008002399999895715,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/zeros_test.py', 183, 'Skipped: fewer than 2 devices detected')"
            },
            "teardown": {
                "duration": 0.000641115999997055,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCUDA::test_zeros_like_cuda",
            "lineno": 175,
            "outcome": "passed",
            "setup": {
                "duration": 0.0006328629999643454,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0019100299998626724,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0007955759999731526,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/pytorch_tests_reduced/zeros_test.py::TestLikeTensorCreationCUDA::test_zeros_like_multiple_device_cuda",
            "lineno": 182,
            "outcome": "skipped",
            "setup": {
                "duration": 0.0003313209999760147,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.001230743000178336,
                "outcome": "skipped",
                "longrepr": "('/home/frasermince/portability/src/pytorch_tests_reduced/zeros_test.py', 183, 'Skipped: fewer than 2 devices detected')"
            },
            "teardown": {
                "duration": 0.03162521900003412,
                "outcome": "passed"
            }
        }
    ],
    "warnings": [
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "config",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_cuda.py",
            "lineno": 19
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "config",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/setuptools/_distutils/version.py",
            "lineno": 345
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_methods_invocations.py",
            "lineno": 16913
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/setuptools/_distutils/version.py",
            "lineno": 345
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_methods_invocations.py",
            "lineno": 16915
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/setuptools/_distutils/version.py",
            "lineno": 345
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/testing/_internal/common_methods_invocations.py",
            "lineno": 16917
        },
        {
            "message": "distutils Version classes are deprecated. Use packaging.version instead.",
            "category": "DeprecationWarning",
            "when": "collect",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/setuptools/_distutils/version.py",
            "lineno": 345
        },
        {
            "message": "Using padding='same' with even kernel lengths and odd dilation may require a zero-padded copy of the input be created (Triggered internally at  ../aten/src/ATen/native/Convolution.cpp:883.)",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/frasermince/portability/src/pytorch_tests_reduced/Conv3d_test.py",
            "lineno": 67
        },
        {
            "message": "Initializing zero-element tensors is a no-op",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/init.py",
            "lineno": 405
        },
        {
            "message": "Initializing zero-element tensors is a no-op",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/init.py",
            "lineno": 405
        },
        {
            "message": "Complex modules are a new feature under active development whose design may change, and some modules might not work as expected when using complex tensors as parameters or buffers. Please file an issue at https://github.com/pytorch/pytorch/issues/new?template=bug-report.yml if a complex module does not work as expected.",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/module.py",
            "lineno": 915
        },
        {
            "message": "Complex modules are a new feature under active development whose design may change, and some modules might not work as expected when using complex tensors as parameters or buffers. Please file an issue at https://github.com/pytorch/pytorch/issues/new?template=bug-report.yml if a complex module does not work as expected.",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/module.py",
            "lineno": 915
        },
        {
            "message": "Initializing zero-element tensors is a no-op",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/init.py",
            "lineno": 405
        },
        {
            "message": "Initializing zero-element tensors is a no-op",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/init.py",
            "lineno": 405
        },
        {
            "message": "Complex modules are a new feature under active development whose design may change, and some modules might not work as expected when using complex tensors as parameters or buffers. Please file an issue at https://github.com/pytorch/pytorch/issues/new?template=bug-report.yml if a complex module does not work as expected.",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/module.py",
            "lineno": 915
        },
        {
            "message": "Complex modules are a new feature under active development whose design may change, and some modules might not work as expected when using complex tensors as parameters or buffers. Please file an issue at https://github.com/pytorch/pytorch/issues/new?template=bug-report.yml if a complex module does not work as expected.",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/nn/modules/module.py",
            "lineno": 915
        },
        {
            "message": "pin memory device is set and pin_memory flag is not used then device pinned memory won't be usedplease set pin_memory to true, if you need to use the device pin memory",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
            "lineno": 645
        },
        {
            "message": "pin memory device is set and pin_memory flag is not used then device pinned memory won't be usedplease set pin_memory to true, if you need to use the device pin memory",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/utils/data/dataloader.py",
            "lineno": 645
        },
        {
            "message": "Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/optim/lr_scheduler.py",
            "lineno": 131
        },
        {
            "message": "Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/cowfrica/.cache/pypoetry/virtualenvs/portability-a43c1_mU-py3.10/lib/python3.10/site-packages/torch/optim/lr_scheduler.py",
            "lineno": 131
        },
        {
            "message": "ComplexHalf support is experimental and many operators don't support it yet. (Triggered internally at  ../aten/src/ATen/EmptyTensor.cpp:32.)",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/frasermince/portability/src/pytorch_tests_reduced/cat_test.py",
            "lineno": 31
        },
        {
            "message": "Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at  ../aten/src/ATen/SparseCsrTensorImpl.cpp:68.)",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/frasermince/portability/src/pytorch_tests_reduced/data_ptr_test.py",
            "lineno": 105
        },
        {
            "message": "torch.qr is deprecated in favor of torch.linalg.qr and will be removed in a future PyTorch release.\nThe boolean parameter 'some' has been replaced with a string parameter 'mode'.\nQ, R = torch.qr(A, some)\nshould be replaced with\nQ, R = torch.linalg.qr(A, 'reduced' if some else 'complete') (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2497.)",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/frasermince/portability/src/pytorch_tests_reduced/logdet_test.py",
            "lineno": 119
        },
        {
            "message": "torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.\ntorch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.\nX = torch.triangular_solve(B, A).solution\nshould be replaced with\nX = torch.linalg.solve_triangular(A, B). (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2189.)",
            "category": "UserWarning",
            "when": "runtest",
            "filename": "/home/frasermince/portability/src/pytorch_tests_reduced/triangular_solve_test.py",
            "lineno": 95
        }
    ]
}