pytorch_functions = [

    "Function",
    "is_tensor",
    "is_storage",
    "is_complex",
    "is_conj",
    "is_floating_point",
    "is_nonzero",
    "set_default_dtype",
    "get_default_dtype",
    "set_default_tensor_type",
    "numel",
    "set_printoptions",
    "set_flush_denormal",
    "tensor",
    "sparse_coo_tensor",
    "asarray",
    "as_tensor",
    "as_strided",
    "from_numpy",
    "from_dlpack",
    "frombuffer",
    "zeros",
    "zeros_like",
    "ones",
    "ones_like",
    "arange",
    "range",
    "linspace",
    "logspace",
    "eye",
    "empty",
    "empty_like",
    "empty_strided",
    "full",
    "full_like",
    "quantize_per_tensor",
    "quantize_per_channel",
    "dequantize",
    "complex",
    "polar",
    "heaviside",
    "adjoint",
    "argwhere",
    "cat",
    "concat",
    "conj",
    "chunk",
    "dsplit",
    "column_stack",
    "dstack",
    "gather",
    "hsplit",
    "hstack",
    "index_add",
    "index_copy",
    "index_reduce",
    "index_select",
    "masked_select",
    "movedim",
    "moveaxis",
    "narrow",
    "nonzero",
    "permute",
    "reshape",
    "row_stack",
    "select",
    "scatter",
    "diagonal_scatter",
    "select_scatter",
    "slice_scatter",
    "scatter_add",
    "scatter_reduce",
    "split",
    "squeeze",
    "stack",
    "swapaxes",
    "swapdims",
    "t",
    "take",
    "take_along_dim",
    "tensor_split",
    "tile",
    "transpose",
    "unbind",
    "unsqueeze",
    "vsplit",
    "vstack",
    "where",
    "Generator",
    "seed",
    "manual_seed",
    "initial_seed",
    "get_rng_state",
    "set_rng_state",
    "bernoulli",
    "multinomial",
    "normal",
    "poisson",
    "rand",
    "rand_like",
    "randint",
    "randint_like",
    "randn",
    "randn_like",
    "randperm",
    "quasirandom.SobolEngine",
    "save",
    "load",
    "get_num_threads",
    "set_num_threads",
    "get_num_interop_threads",
    "set_num_interop_threads",
    "no_grad",
    "enable_grad",
    "set_grad_enabled",
    "is_grad_enabled",
    "inference_mode",
    "is_inference_mode_enabled",
    "no_grad",
    "enable_grad",
    "set_grad_enabled",
    "is_grad_enabled",
    "inference_mode",
    "is_inference_mode_enabled",
    "abs",
    "absolute",
    "acos",
    "arccos",
    "acosh",
    "arccosh",
    "add",
    "addcdiv",
    "addcmul",
    "angle",
    "asin",
    "arcsin",
    "asinh",
    "arcsinh",
    "atan",
    "arctan",
    "atanh",
    "arctanh",
    "atan2",
    "arctan2",
    "bitwise_not",
    "bitwise_and",
    "bitwise_or",
    "bitwise_xor",
    "bitwise_left_shift",
    "bitwise_right_shift",
    "ceil",
    "clamp",
    "clip",
    "conj_physical",
    "copysign",
    "cos",
    "cosh",
    "deg2rad",
    "div",
    "divide",
    "digamma",
    "erf",
    "erfc",
    "erfinv",
    "exp",
    "exp2",
    "expm1",
    "fake_quantize_per_channel_affine",
    "fake_quantize_per_tensor_affine",
    "fix",
    "float_power",
    "floor",
    "floor_divide",
    "fmod",
    "frac",
    "frexp",
    "gradient",
    "imag",
    "ldexp",
    "lerp",
    "lgamma",
    "log",
    "log10",
    "log1p",
    "log2",
    "logaddexp",
    "logaddexp2",
    "logical_and",
    "logical_not",
    "logical_or",
    "logical_xor",
    "logit",
    "hypot",
    "i0",
    "igamma",
    "igammac",
    "mul",
    "multiply",
    "mvlgamma",
    "nan_to_num",
    "neg",
    "negative",
    "nextafter",
    "polygamma",
    "positive",
    "pow",
    "quantized_batch_norm",
    "quantized_max_pool1d",
    "quantized_max_pool2d",
    "rad2deg",
    "real",
    "reciprocal",
    "remainder",
    "round",
    "rsqrt",
    "sigmoid",
    "sign",
    "sgn",
    "signbit",
    "sin",
    "sinc",
    "sinh",
    "sqrt",
    "square",
    "sub",
    "subtract",
    "tan",
    "tanh",
    "true_divide",
    "trunc",
    "xlogy",
    "argmax",
    "argmin",
    "amax",
    "amin",
    "aminmax",
    "all",
    "any",
    "max",
    "min",
    "dist",
    "logsumexp",
    "mean",
    "nanmean",
    "median",
    "nanmedian",
    "mode",
    "norm",
    "nansum",
    "prod",
    "quantile",
    "nanquantile",
    "std",
    "std_mean",
    "sum",
    "unique",
    "unique_consecutive",
    "var",
    "var_mean",
    "count_nonzero",
    "allclose",
    "argsort",
    "eq",
    "equal",
    "ge",
    "greater_equal",
    "gt",
    "greater",
    "isclose",
    "isfinite",
    "isin",
    "isinf",
    "isposinf",
    "isneginf",
    "isnan",
    "isreal",
    "kthvalue",
    "le",
    "less_equal",
    "lt",
    "less",
    "maximum",
    "minimum",
    "fmax",
    "fmin",
    "ne",
    "not_equal",
    "sort",
    "topk",
    "msort",
    "diag_embed",
    "diagflat",
    "If input is a vector (1-D tensor), then returns a 2-D square tensor",
    "diagonal",
    "diff",
    "einsum",
    "flatten",
    "flip",
    "fliplr",
    "flipud",
    "kron",
    "rot90",
    "gcd",
    "histc",
    "histogram",
    "histogramdd",
    "meshgrid",
    "lcm",
    "logcumsumexp",
    "ravel",
    "renorm",
    "repeat_interleave",
    "roll",
    "searchsorted",
    "tensordot",
    "trace",
    "tril",
    "tril_indices",
    "triu",
    "triu_indices",
    "vander",
    "view_as_real",
    "view_as_complex",
    "resolve_conj",
    "resolve_neg",
    "addbmm",
    "addmm",
    "addmv",
    "addr",
    "baddbmm",
    "bmm",
    "chain_matmul",
    "cholesky",
    "cholesky_inverse",
    "cholesky_solve",
    "dot",
    "eig",
    "geqrf",
    "ger",
    "inner",
    "inverse",
    "det",
    "logdet",
    "slogdet",
    "lstsq",
    "lu",
    "lu_solve",
    "lu_unpack",
    "matmul",
    "matrix_power",
    "matrix_rank",
    "matrix_exp",
    "mm",
    "mv",
    "orgqr",
    "ormqr",
    "outer",
    "pinverse",
    "qr",
    "svd",
    "svd_lowrank",
    "pca_lowrank",
    "symeig",
    "lobpcg",
    "trapz",
    "trapezoid",
    "cumulative_trapezoid",
    "triangular_solve",
    "vdot",
    "compiled_with_cxx11_abi",
    "result_type",
    "can_cast",
    "promote_types",
    "use_deterministic_algorithms",
    "are_deterministic_algorithms_enabled",
    "is_deterministic_algorithms_warn_only_enabled",
    "set_deterministic_debug_mode",
    "get_deterministic_debug_mode",
    "set_float32_matmul_precision",
    "get_float32_matmul_precision",
    "set_warn_always",
    "is_warn_always_enabled",
    "_assert",
]
